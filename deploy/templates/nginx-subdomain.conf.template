# Boss AI Platform - Nginx конфигурация для поддомена
# Файл: /etc/nginx/sites-available/app.{{DOMAIN}}
#
# Активация:
# sudo ln -s /etc/nginx/sites-available/app.{{DOMAIN}} /etc/nginx/sites-enabled/
# sudo nginx -t
# sudo systemctl reload nginx

# ============================================
# HTTPS SERVER BLOCK
# ============================================

server {
    listen 443 ssl http2;
    server_name app.{{DOMAIN}};

    # SSL сертификаты
    ssl_certificate /etc/letsencrypt/live/{{DOMAIN}}/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/{{DOMAIN}}/privkey.pem;

    # SSL настройки
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # ============================================
    # FRONTEND CONFIGURATION
    # ============================================

    # Корневая директория для frontend
    root {{FRONTEND_PATH}};
    index index.html;

    # Основной location для SPA
    location / {
        try_files $uri $uri/ /index.html;

        # Заголовки безопасности
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "no-referrer-when-downgrade" always;
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    }

    # ============================================
    # API GATEWAY PROXY
    # ============================================

    # Проксирование API запросов к Node.js API Gateway
    location /api {
        proxy_pass http://localhost:{{API_PORT}};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection 'upgrade';
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_cache_bypass $http_upgrade;

        # Таймауты
        proxy_connect_timeout 60s;
        proxy_send_timeout 60s;
        proxy_read_timeout 60s;
    }

    # ============================================
    # WEBSOCKET PROXY
    # ============================================

    # Проксирование WebSocket соединений для Socket.IO
    location /socket.io/ {
        proxy_pass http://localhost:{{API_PORT}};
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        # WebSocket специфичные настройки
        proxy_buffering off;
        proxy_cache off;
    }

    # ============================================
    # STATIC FILES CACHING
    # ============================================

    # Кэширование статических файлов
    location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
        expires 1y;
        add_header Cache-Control "public, immutable";
        add_header X-Content-Type-Options "nosniff";

        # Сжатие
        gzip_static on;
    }

    # Не кэшировать HTML файлы
    location ~* \.(html|htm)$ {
        expires -1;
        add_header Cache-Control "no-cache, no-store, must-revalidate";
        add_header Pragma "no-cache";
    }

    # ============================================
    # SECURITY
    # ============================================

    # Скрытие версии Nginx
    server_tokens off;

    # Ограничение размера тела запроса
    client_max_body_size 10M;

    # Защита от DDoS
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=login:10m rate=1r/s;

    location /api/auth {
        limit_req zone=login burst=5 nodelay;
        proxy_pass http://localhost:{{API_PORT}};
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    location /api {
        limit_req zone=api burst=20 nodelay;
        proxy_pass http://localhost:{{API_PORT}};
        proxy_http_version 1.1;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
    }

    # ============================================
    # LOGGING
    # ============================================

    # Логирование
    access_log /var/log/nginx/app.{{DOMAIN}}_access.log;
    error_log /var/log/nginx/app.{{DOMAIN}}_error.log;

    # Логирование прокси запросов
    access_log /var/log/nginx/app.{{DOMAIN}}_proxy.log proxy;
}

# ============================================
# HTTP REDIRECT
# ============================================

server {
    listen 80;
    server_name app.{{DOMAIN}};
    return 301 https://$server_name$request_uri;
}

# ============================================
# NOTES
# ============================================

# Требования:
# - SSL сертификат для {{DOMAIN}}
# - Node.js приложение на порту {{API_PORT}}
# - Frontend собран в {{FRONTEND_PATH}}
#
# DNS настройка:
# Добавить A-запись: app.{{DOMAIN}} → YOUR_SERVER_IP
#
# Проверка:
# nginx -t
# systemctl reload nginx
# curl -I https://app.{{DOMAIN}}
