import { jsx as _jsx, jsxs as _jsxs } from "react/jsx-runtime";
import * as React from 'react';
import { useMemo, useState } from 'react';
import { DiagramContainer } from './components/DiagramContainer';
import { DiagramControls } from './components/DiagramControls';
import { DiagramError } from './components/DiagramError';
import { DiagramLegend } from './components/DiagramLegend';
import { useDiagramControls } from './hooks/useDiagramControls';
import { useDiagramRender } from './hooks/useDiagramRender';
import { useDiagramZoom } from './hooks/useDiagramZoom';
import { GPT5Integration } from './modules/GPT5IntegrationConfig';
import { InputSystem } from './modules/InputSystemConfig';
import { RaptorEngine } from './modules/raptorEngineModule';
import './styles/Architecture.css';
/**
 * –ì–ª–∞–≤–Ω—ã–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç –º–æ–¥—É–ª—å–Ω–æ–π –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—ã –¥–∏–∞–≥—Ä–∞–º–º—ã
 * –ò—Å–ø—Ä–∞–≤–ª—è–µ—Ç –ø—Ä–æ–±–ª–µ–º—É –∏—Å—á–µ–∑–Ω–æ–≤–µ–Ω–∏—è –¥–∏–∞–≥—Ä–∞–º–º—ã
 */
export const ModularArchitectureDiagram = () => {
    const [activeModule, setActiveModule] = useState(null);
    const [showAllModules, setShowAllModules] = useState(true);
    const { zoom, isFullscreen, zoomIn, zoomOut, resetZoom, toggleFullscreen } = useDiagramZoom();
    const { showLegend, showMinimap, toggleLegend, toggleMinimap, resetControls } = useDiagramControls();
    // –û–±—ä–µ–¥–∏–Ω—è–µ–º –≤—Å–µ –º–æ–¥—É–ª–∏ –≤ –µ–¥–∏–Ω—É—é –¥–∏–∞–≥—Ä–∞–º–º—É
    const fullDiagramCode = useMemo(() => {
        if (showAllModules) {
            return `
        flowchart TD
        %% ====== –ß–ò–¢–ê–ï–ú–û–°–¢–¨/–¶–í–ï–¢–ê –ì–†–£–ü–ü ======
        classDef input fill:#a7f3d0,stroke:#059669,stroke-width:2px,color:#111827
        classDef infra fill:#0b1f3b,stroke:#60a5fa,stroke-width:2px,color:#eaf2ff
        classDef service fill:#0f172a,stroke:#374151,stroke-width:2px,color:#f8fafc
        classDef queue fill:#0c1f16,stroke:#22c55e,stroke-width:2px,color:#dcfce7
        classDef raptor fill:#f59e0b,stroke:#b45309,stroke-width:2px,color:#111827
        classDef gpt5 fill:#2b0b3b,stroke:#8b5cf6,stroke-width:2px,color:#f5eaff
        %% ================ –°–ò–°–¢–ï–ú–ê –í–•–û–î–ê ================ %%
        USER(("üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å")) -->|"–°–æ–æ–±—â–µ–Ω–∏–µ/–ì–æ–ª–æ—Å/–§–∞–π–ª"| NGINX_LB["‚öñÔ∏è Nginx Load Balancer<br>‚Ä¢ –†–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–≥—Ä—É–∑–∫–∏<br>‚Ä¢ Health checks<br>‚Ä¢ SSL termination<br>‚Ä¢ Rate limiting"]

        NGINX_LB --> BOT["ü§ñ Telegram –ë–æ—Ç<br>‚Ä¢ Redis FSM<br>‚Ä¢ Rate limiting<br>‚Ä¢ –ì–æ–ª–æ—Å–æ–≤—ã–µ –∫–æ–º–∞–Ω–¥—ã"]
        NGINX_LB --> WEB_SERVICE["üåê –í–µ–±-—Å–µ—Ä–≤–∏—Å<br>‚Ä¢ Next.js 14<br>‚Ä¢ WebSockets<br>‚Ä¢ PWA –ø–æ–¥–¥–µ—Ä–∂–∫–∞"]
        NGINX_LB --> MOBILE_APP["üì± –ú–æ–±–∏–ª—å–Ω–æ–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ<br>‚Ä¢ React Native<br>‚Ä¢ Push-—É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è<br>‚Ä¢ –û—Ñ—Ñ–ª–∞–π–Ω-—Ä–µ–∂–∏–º"]

        BOT --> REDIS_QUEUE["üì¨ Redis Queue<br>‚Ä¢ –û—á–µ—Ä–µ–¥—å –∑–∞–ø—Ä–æ—Å–æ–≤<br>‚Ä¢ –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è<br>‚Ä¢ Rate limiting"]
        WEB_SERVICE --> REDIS_QUEUE
        MOBILE_APP --> REDIS_QUEUE

        REDIS_QUEUE --> WORKER_POOL["‚öôÔ∏è Worker Pool<br>‚Ä¢ –ü–∞—Ä–∞–ª–ª–µ–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞<br>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –º–∞—Å—à—Ç–∞–±–∏—Ä–æ–≤–∞–Ω–∏–µ<br>‚Ä¢ –ú–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è"]

        WORKER_POOL --> ROUTER["üß≠ –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä<br>FastAPI + Pydantic v2<br>‚Ä¢ Idempotency keys<br>‚Ä¢ –£–º–Ω–∞—è –≤–∞–ª–∏–¥–∞—Ü–∏—è"]

        %% ================ RAPTOR ENGINE ================ %%
        subgraph RAPTOR_SYSTEM["üå≥ RAPTOR ENGINE"]
            ROUTER --> ENHANCED_QPROC["üß† –†–∞—Å—à–∏—Ä–µ–Ω–Ω—ã–π –æ–±—Ä–∞–±–æ—Ç—á–∏–∫<br>‚Ä¢ SlangDictionary<br>‚Ä¢ ContextAnalyzer<br>‚Ä¢ SynonymExpander<br>‚Ä¢ LegalTerminologyManager"]

            ENHANCED_QPROC --> RAPTOR_ENGINE["üå≥ RAPTOR Engine<br>‚Ä¢ –†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è<br>‚Ä¢ –î—Ä–µ–≤–æ–≤–∏–¥–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è<br>‚Ä¢ –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∞–±—Å—Ç—Ä–∞–∫—Ü–∏–π<br>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –ø–æ–∏—Å–∫"]

            RAPTOR_ENGINE --> RAPTOR_TREE["üå≥ RAPTOR Tree<br>‚Ä¢ –ò–µ—Ä–∞—Ä—Ö–∏—á–µ—Å–∫–∞—è —Å—Ç—Ä—É–∫—Ç—É—Ä–∞<br>‚Ä¢ –†–µ–∫—É—Ä—Å–∏–≤–Ω—ã–µ —É–∑–ª—ã<br>‚Ä¢ –ê–±—Å—Ç—Ä–∞–∫—Ü–∏–∏ –ø–æ —É—Ä–æ–≤–Ω—è–º"]

            RAPTOR_ENGINE --> RAPTOR_CLUSTERING["üîó RAPTOR Clustering<br>‚Ä¢ K-means –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è<br>‚Ä¢ –°–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–æ–µ –≥—Ä—É–ø–ø–∏—Ä–æ–≤–∞–Ω–∏–µ<br>‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω—ã–µ –ø–æ—Ä–æ–≥–∏"]
        end

        %% ================ GPT-5 INTEGRATION ================ %%
        subgraph GPT5_SYSTEM["üöÄ GPT-5 SYSTEM"]
            ENHANCED_QPROC --> INTELLIGENT_ROUTER["üöÄ Intelligent Router<br>‚Ä¢ –ê–Ω–∞–ª–∏–∑ —Å–ª–æ–∂–Ω–æ—Å—Ç–∏ –∑–∞–ø—Ä–æ—Å–æ–≤<br>‚Ä¢ –í—ã–±–æ—Ä –æ–ø—Ç–∏–º–∞–ª—å–Ω–æ–π –º–æ–¥–µ–ª–∏<br>‚Ä¢ –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –±—é–¥–∂–µ—Ç–æ–º<br>‚Ä¢ –ê–¥–∞–ø—Ç–∏–≤–Ω–∞—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è"]

            INTELLIGENT_ROUTER --> GPT5_NANO["‚ö° GPT-5 Nano<br>‚Ä¢ 80% –∑–∞–ø—Ä–æ—Å–æ–≤<br>‚Ä¢ –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã<br>‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã<br>‚Ä¢ –í—Ä–µ–º—è: 1-2 —Å–µ–∫"]

            INTELLIGENT_ROUTER --> GPT5_MINI["üöÄ GPT-5 Mini<br>‚Ä¢ 15% –∑–∞–ø—Ä–æ—Å–æ–≤<br>‚Ä¢ –°—Ä–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏<br>‚Ä¢ –ë–∞–ª–∞–Ω—Å —Å–∫–æ—Ä–æ—Å—Ç–∏/–∫–∞—á–µ—Å—Ç–≤–∞<br>‚Ä¢ –í—Ä–µ–º—è: 2-3 —Å–µ–∫"]

            INTELLIGENT_ROUTER --> GPT5_STANDARD["üéØ GPT-5 Standard<br>‚Ä¢ 5% –∑–∞–ø—Ä–æ—Å–æ–≤<br>‚Ä¢ –°–ª–æ–∂–Ω—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è<br>‚Ä¢ –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ<br>‚Ä¢ –í—Ä–µ–º—è: 3-5 —Å–µ–∫"]

            GPT5_NANO --> RESPONSE_GENERATOR["üìù –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤<br>‚Ä¢ –§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–æ–≤<br>‚Ä¢ –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥<br>‚Ä¢ –ö–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è"]

            GPT5_MINI --> RESPONSE_GENERATOR
            GPT5_STANDARD --> RESPONSE_GENERATOR

            RESPONSE_GENERATOR --> RESULT_CACHE["üíæ Result Cache<br>‚Ä¢ –ö—ç—à –æ—Ç–≤–µ—Ç–æ–≤ GPT-5<br>‚Ä¢ TTL –Ω–∞—Å—Ç—Ä–æ–π–∫–∏<br>‚Ä¢ –ò–Ω–≤–∞–ª–∏–¥–∞—Ü–∏—è<br>‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ–ø–∞–¥–∞–Ω–∏–π"]
        end

        %% ================ –î–ê–ù–ù–´–ï –ò –ú–û–ù–ò–¢–û–†–ò–ù–ì ================ %%
        subgraph DATA["üóÑÔ∏è –î–ê–ù–ù–´–ï"]
            POSTGRES[(üêò PostgreSQL)]
            QDRANT[(üîç Qdrant Vector DB)]
            MINIO[(üóÑÔ∏è MinIO S3)]
        end

        subgraph MON["üìä –ú–û–ù–ò–¢–û–†–ò–ù–ì"]
            SIGNOZ["üîç SigNoz"]
        end

        %% –°–≤—è–∑–∏ —Å –¥–∞–Ω–Ω—ã–º–∏ –∏ –º–µ—Ç—Ä–∏–∫–∞–º–∏
        ENHANCED_QPROC -->|"–º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ"| POSTGRES
        ENHANCED_QPROC -->|"–≤–µ–∫—Ç–æ—Ä—ã"| QDRANT
        ENHANCED_QPROC -->|"—Ñ–∞–π–ª—ã"| MINIO
        RESPONSE_GENERATOR -->|"–º–µ—Ç—Ä–∏–∫–∏"| SIGNOZ
        WORKER_POOL -->|"–º–µ—Ç—Ä–∏–∫–∏"| SIGNOZ

        %% ================ –°–¢–ò–õ–ò–ó–ê–¶–ò–Ø ================ %%
        %% ====== –ù–ê–ó–ù–ê–ß–ï–ù–ò–ï –ö–õ–ê–°–°–û–í ======
        class USER input
        class NGINX_LB input
        class BOT,WEB_SERVICE,MOBILE_APP,WORKER_POOL,ROUTER input
        class REDIS_QUEUE input
        class RESULT_CACHE queue
        class RAPTOR_ENGINE,RAPTOR_TREE,RAPTOR_CLUSTERING raptor
        class GPT5_NANO,GPT5_MINI,GPT5_STANDARD,INTELLIGENT_ROUTER gpt5
        class POSTGRES,QDRANT,MINIO db
        class SIGNOZ monitor
      `;
        }
        else if (activeModule) {
            // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Ç–æ–ª—å–∫–æ –≤—ã–±—Ä–∞–Ω–Ω—ã–π –º–æ–¥—É–ª—å
            const modules = [InputSystem, RaptorEngine, GPT5Integration];
            const module = modules.find(m => m.id === activeModule);
            console.log('Selected module:', activeModule, 'Found module:', module);
            if (module?.mermaidCode) {
                const diagramCode = `flowchart TD\n${module.mermaidCode}`;
                console.log('Generated diagram code:', diagramCode);
                return diagramCode;
            }
            return '';
        }
        return '';
    }, [showAllModules, activeModule]);
    const { diagramRef, isLoading, error, performance, isRendered, forceRerender } = useDiagramRender(fullDiagramCode);
    // –û–±–Ω–æ–≤–ª—è–µ–º –∑—É–º –≤ CSS –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π
    React.useEffect(() => {
        if (diagramRef.current) {
            diagramRef.current.style.setProperty('--zoom-level', zoom.toString());
        }
        // eslint-disable-next-line react-hooks/exhaustive-deps
    }, [zoom]);
    const handleModuleSelect = (moduleId) => {
        setActiveModule(moduleId);
        setShowAllModules(false);
    };
    const handleShowAll = () => {
        setActiveModule(null);
        setShowAllModules(true);
    };
    const handleDownload = () => {
        const svg = diagramRef.current?.querySelector('svg');
        if (svg) {
            const svgData = new XMLSerializer().serializeToString(svg);
            const blob = new Blob([svgData], { type: 'image/svg+xml' });
            const url = URL.createObjectURL(blob);
            const link = document.createElement('a');
            link.href = url;
            link.download = 'ai-lawyer-architecture.svg';
            link.click();
            URL.revokeObjectURL(url);
        }
    };
    return (_jsxs("div", { className: `modular-architecture-diagram ${isFullscreen ? 'fullscreen' : ''}`, children: [_jsx(DiagramControls, { zoom: zoom, isFullscreen: isFullscreen, showLegend: showLegend, showMinimap: showMinimap, onZoomIn: zoomIn, onZoomOut: zoomOut, onResetZoom: resetZoom, onToggleFullscreen: toggleFullscreen, onToggleLegend: toggleLegend, onToggleMinimap: toggleMinimap, onDownload: handleDownload, onRerender: forceRerender, onResetControls: resetControls }), _jsxs("div", { className: "diagram-content", children: [_jsxs("div", { className: "modules-panel", children: [_jsx("h3", { children: "\u041C\u043E\u0434\u0443\u043B\u0438 \u0430\u0440\u0445\u0438\u0442\u0435\u043A\u0442\u0443\u0440\u044B" }), _jsxs("div", { className: "modules-list", children: [_jsx("button", { onClick: handleShowAll, className: `module-button ${showAllModules ? 'active' : ''}`, children: "\uD83C\uDFD7\uFE0F \u041F\u043E\u043B\u043D\u0430\u044F \u0430\u0440\u0445\u0438\u0442\u0435\u043A\u0442\u0443\u0440\u0430" }), _jsx("button", { onClick: () => handleModuleSelect('input-system'), className: `module-button ${activeModule === 'input-system' ? 'active' : ''}`, children: "\uD83D\uDEAA \u0421\u0438\u0441\u0442\u0435\u043C\u0430 \u0432\u0445\u043E\u0434\u0430" }), _jsx("button", { onClick: () => handleModuleSelect('raptor-engine'), className: `module-button ${activeModule === 'raptor-engine' ? 'active' : ''}`, children: "\uD83C\uDF33 RAPTOR Engine" }), _jsx("button", { onClick: () => handleModuleSelect('gpt5-integration'), className: `module-button ${activeModule === 'gpt5-integration' ? 'active' : ''}`, children: "\uD83D\uDE80 GPT-5 Integration" })] })] }), _jsxs("div", { className: "diagram-area", children: [_jsx(DiagramContainer, { ref: diagramRef, zoom: zoom, isLoading: isLoading, isRendered: isRendered }), error && _jsx(DiagramError, { error: error, onRetry: forceRerender }), performance && (_jsx("div", { className: "performance-info", children: _jsxs("small", { children: ["\u0420\u0435\u043D\u0434\u0435\u0440: ", performance.renderTime.toFixed(0), "\u043C\u0441 | \u0423\u0437\u043B\u044B: ", performance.nodeCount, " | \u0421\u0432\u044F\u0437\u0438: ", performance.connectionCount] }) })), _jsxs("div", { className: "investor-sections", id: "investor-metrics", children: [_jsx("h3", { children: "\u0426\u0435\u043D\u043D\u043E\u0441\u0442\u044C \u0434\u043B\u044F \u0431\u0438\u0437\u043D\u0435\u0441\u0430" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "\u0421\u043A\u043E\u0440\u043E\u0441\u0442\u044C \u043F\u0440\u0438\u043D\u044F\u0442\u0438\u044F \u0440\u0435\u0448\u0435\u043D\u0438\u0439:" }), " RAPTOR + GPT\u2011\u0440\u043E\u0443\u0442\u0438\u043D\u0433 \u0441\u043E\u043A\u0440\u0430\u0449\u0430\u044E\u0442 \u0432\u0440\u0435\u043C\u044F \u0434\u043E \u0440\u0435\u0437\u0443\u043B\u044C\u0442\u0430\u0442\u0430"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u0421\u043D\u0438\u0436\u0435\u043D\u0438\u0435 \u0437\u0430\u0442\u0440\u0430\u0442:" }), " \u0418\u043D\u0442\u0435\u043B\u043B\u0435\u043A\u0442\u0443\u0430\u043B\u044C\u043D\u043E\u0435 \u043A\u044D\u0448\u0438\u0440\u043E\u0432\u0430\u043D\u0438\u0435 \u0438 \u043C\u0430\u0440\u0448\u0440\u0443\u0442\u0438\u0437\u0430\u0446\u0438\u044F \u043E\u043F\u0442\u0438\u043C\u0438\u0437\u0438\u0440\u0443\u044E\u0442 \u0441\u0442\u043E\u0438\u043C\u043E\u0441\u0442\u044C \u0437\u0430\u043F\u0440\u043E\u0441\u0430"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u041A\u0430\u0447\u0435\u0441\u0442\u0432\u043E \u043E\u0442\u0432\u0435\u0442\u043E\u0432:" }), " rerank \u0438 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u0447\u0435\u0441\u043A\u0438\u0439 \u043A\u043E\u043D\u0442\u0435\u043A\u0441\u0442 \u043F\u043E\u0432\u044B\u0448\u0430\u044E\u0442 \u0440\u0435\u043B\u0435\u0432\u0430\u043D\u0442\u043D\u043E\u0441\u0442\u044C"] })] }), _jsx("h3", { children: "SLO/SLI \u0438 \u043A\u043B\u044E\u0447\u0435\u0432\u044B\u0435 \u043C\u0435\u0442\u0440\u0438\u043A\u0438" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "p95 \u043B\u0430\u0442\u0435\u043D\u0442\u043D\u043E\u0441\u0442\u044C (\u043A\u043B\u0430\u0441\u0441\u044B \u0437\u0430\u0434\u0430\u0447):" }), " \u043F\u043E\u0438\u0441\u043A \u2264 800 \u043C\u0441; \u0433\u0435\u043D\u0435\u0440\u0430\u0446\u0438\u044F 1\u20135 \u0441; \u0438\u043D\u0434\u0435\u043A\u0441\u0430\u0446\u0438\u044F \u043F\u0430\u0447\u043A\u0438 \u2264 2 \u043C\u0438\u043D"] }), _jsxs("li", { children: [_jsx("strong", { children: "Throughput:" }), " 200 ops/\u0441\u0435\u043A \u0432 \u043F\u0438\u043A\u0435; OCR 50 \u0441\u0442\u0440/\u043C\u0438\u043D"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u041A\u0430\u0447\u0435\u0441\u0442\u0432\u043E:" }), " recall@10 \u2265 0.9 (\u0441 rerank); OCR WER \u2264 15%"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u042D\u043A\u043E\u043D\u043E\u043C\u0438\u043A\u0430:" }), " cost/req \u221230\u201355% \u0431\u043B\u0430\u0433\u043E\u0434\u0430\u0440\u044F \u043A\u044D\u0448\u0443 \u0438 \u0440\u043E\u0443\u0442\u0438\u043D\u0433\u0443"] })] }), _jsx("h3", { id: "slo-sli", children: "\u0414\u043E\u0440\u043E\u0436\u043D\u0430\u044F \u043A\u0430\u0440\u0442\u0430 (\u043A\u0432\u0430\u0440\u0442\u0430\u043B)" }), _jsxs("ol", { children: [_jsx("li", { children: "\u041F\u043E\u043B\u043D\u0430\u044F \u0430\u0432\u0442\u043E\u043C\u0430\u0442\u0438\u0437\u0430\u0446\u0438\u044F \u0433\u0435\u043D\u0435\u0440\u0430\u0446\u0438\u0438 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u043E\u0432 (\u0444\u0438\u043D\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F \u0432\u0430\u043B\u0438\u0434\u0430\u0446\u0438\u0439)" }), _jsx("li", { children: "GraphRAG + HyDE: \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043D\u043D\u044B\u0439 \u043A\u043E\u043D\u0442\u0435\u043A\u0441\u0442 \u0438 multi\u2011hop reasoning" }), _jsx("li", { children: "\u0410\u0434\u043C\u0438\u043D\u2011\u043F\u0430\u043D\u0435\u043B\u044C \u043C\u0435\u0442\u0440\u0438\u043A: \u0432\u0438\u0437\u0443\u0430\u043B\u0438\u0437\u0430\u0446\u0438\u044F SLO/SLI \u0438 \u0434\u0435\u043C\u043E\u2011\u043A\u0435\u0439\u0441\u044B" })] }), _jsx("h3", { children: "\u0420\u0438\u0441\u043A\u0438 \u0438 \u043A\u043E\u043D\u0442\u0440\u043E\u043B\u044C" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "\u041A\u0430\u0447\u0435\u0441\u0442\u0432\u043E \u0434\u0430\u043D\u043D\u044B\u0445:" }), " \u043F\u0440\u0435\u0434\u2011/\u043F\u043E\u0441\u0442\u2011\u043E\u0431\u0440\u0430\u0431\u043E\u0442\u043A\u0430, \u0430\u043D\u043E\u043D\u0438\u043C\u0438\u0437\u0430\u0446\u0438\u044F PII, \u0432\u0430\u043B\u0438\u0434\u0430\u0442\u043E\u0440\u044B"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u041D\u0430\u0433\u0440\u0443\u0437\u043A\u0430:" }), " \u043E\u0447\u0435\u0440\u0435\u0434\u0438, \u043F\u0443\u043B \u0432\u043E\u0440\u043A\u0435\u0440\u043E\u0432, \u0434\u0435\u0433\u0440\u0430\u0434\u0430\u0446\u0438\u044F \u0441 \u0441\u043E\u0445\u0440\u0430\u043D\u0435\u043D\u0438\u0435\u043C \u0444\u0443\u043D\u043A\u0446\u0438\u043E\u043D\u0430\u043B\u044C\u043D\u043E\u0441\u0442\u0438"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u041C\u043E\u0434\u0435\u043B\u0438:" }), " \u043F\u0435\u0440\u0435\u043A\u043B\u044E\u0447\u0430\u0435\u043C\u044B\u0435 \u043F\u0440\u043E\u0444\u0438\u043B\u0438 \u044D\u043C\u0431\u0435\u0434\u0434\u0438\u043D\u0433\u043E\u0432 \u0438 rerank, fallback \u0441\u0442\u0440\u0430\u0442\u0435\u0433\u0438\u0438"] })] }), _jsx("h3", { id: "demo-cases", children: "\u0414\u0435\u043C\u043E\u2011\u043A\u0435\u0439\u0441\u044B" }), _jsxs("ul", { children: [_jsxs("li", { children: [_jsx("strong", { children: "\u041F\u043E\u0438\u0441\u043A \u043F\u043E \u0434\u0435\u043B\u0443:" }), " \u043E\u0442\u0432\u0435\u0442 \u2264 2 \u0441, \u0442\u043E\u0447\u043D\u043E\u0441\u0442\u044C \u043F\u043E\u0432\u044B\u0448\u0435\u043D\u0430 \u0437\u0430 \u0441\u0447\u0451\u0442 RAPTOR"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u0410\u043D\u0430\u043B\u0438\u0437 \u0434\u043E\u0433\u043E\u0432\u043E\u0440\u0430:" }), " \u0432\u044B\u044F\u0432\u043B\u0435\u043D\u0438\u0435 \u0440\u0438\u0441\u043A\u043E\u0432 \u0441 \u043A\u043E\u043D\u0442\u0435\u043A\u0441\u0442\u043D\u044B\u043C\u0438 \u0441\u0441\u044B\u043B\u043A\u0430\u043C\u0438"] }), _jsxs("li", { children: [_jsx("strong", { children: "\u0421\u0431\u043E\u0440 \u0434\u043E\u043A\u0443\u043C\u0435\u043D\u0442\u0430:" }), " \u043A\u043E\u043D\u0441\u0442\u0440\u0443\u043A\u0442\u043E\u0440 + \u0432\u0430\u043B\u0438\u0434\u0430\u0442\u043E\u0440 \u043F\u043E\u043B\u0435\u0439, \u044D\u043A\u0441\u043F\u043E\u0440\u0442 \u0432 DOCX/PDF"] })] })] })] }), showLegend && (_jsx("div", { className: "legend-panel", children: _jsx(DiagramLegend, {}) }))] })] }));
};
//# sourceMappingURL=index.js.map