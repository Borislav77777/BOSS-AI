/**
 * üß† AI BRAIN - –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω—ã–π –º–æ–∑–≥ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã –¥–ª—è –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
 *
 * –≠—Ç–æ—Ç —Å–µ—Ä–≤–∏—Å –æ—Ç–≤–µ—á–∞–µ—Ç –∑–∞:
 * - –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
 * - –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—é —Å–æ–æ–±—â–µ–Ω–∏–π –∫ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—â–∏–º —Å–µ—Ä–≤–∏—Å–∞–º
 * - –û–±—Ä–∞–±–æ—Ç–∫—É —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
 * - –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º —Ä–∞–∑–≥–æ–≤–æ—Ä–∞
 */
import { Message } from '@/types';
export interface ChatContext {
    activeService: string | null;
    activeSection: string;
    conversationHistory: Message[];
    userPreferences: Record<string, unknown>;
    lastActivity: Date;
}
export interface ChatContextForAI {
    attachedItems: Array<{
        type: string;
        title: string;
        content?: string;
    }>;
    activeProject?: {
        title: string;
    };
    contextSummary?: string;
}
export interface ChatResponse {
    success: boolean;
    message: string;
    data?: unknown;
    serviceId?: string;
    toolId?: string;
    isSystemResponse?: boolean;
    shouldRouteToService?: boolean;
}
export interface AIBrainConfig {
    enableSystemCommands: boolean;
    enableServiceRouting: boolean;
    enableContextAnalysis: boolean;
    maxHistoryLength: number;
    responseTimeout: number;
}
declare class AIBrainService {
    private config;
    private context;
    /**
     * –û—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Å–æ–æ–±—â–µ–Ω–∏–π
     */
    processMessage(message: string, currentService?: string | null, currentSection?: string): Promise<ChatResponse>;
    /**
     * –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å —É—á–µ—Ç–æ–º –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    private analyzeIntentWithContext;
    /**
     * –ê–Ω–∞–ª–∏–∑ –Ω–∞–º–µ—Ä–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
     */
    private analyzeIntent;
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö –∫–æ–º–∞–Ω–¥
     */
    private handleSystemCommand;
    /**
     * –ú–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ü–∏—è –∫ —Å–µ—Ä–≤–∏—Å—É
     */
    private routeToService;
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤ —Å –∫–æ–Ω—Ç–µ–∫—Å—Ç–æ–º
     */
    private handleGeneralQueryWithContext;
    /**
     * –ü–æ—Å—Ç—Ä–æ–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –∫–æ–Ω—Ç–µ–∫—Å—Ç–µ
     */
    private buildContextInfo;
    /**
     * –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–±—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
     */
    private handleGeneralQuery;
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    private updateContext;
    /**
     * –ò–∑–≤–ª–µ—á–µ–Ω–∏–µ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤
     */
    private extractKeywords;
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –ø–æ–º–æ—â–∏
     */
    private getHelpMessage;
    /**
     * –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Å–æ–æ–±—â–µ–Ω–∏—è –≤ –∏—Å—Ç–æ—Ä–∏—é
     */
    addMessageToHistory(message: Message): void;
    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    getContext(): ChatContext;
    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
     */
    updateConfig(newConfig: Partial<AIBrainConfig>): void;
    /**
     * –û—á–∏—Å—Ç–∫–∞ –∫–æ–Ω—Ç–µ–∫—Å—Ç–∞
     */
    clearContext(): void;
}
export declare const aiBrain: AIBrainService;
export {};
//# sourceMappingURL=AIBrain.d.ts.map