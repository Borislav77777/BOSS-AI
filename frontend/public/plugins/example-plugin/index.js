/**
 * –ü—Ä–∏–º–µ—Ä –ø–ª–∞–≥–∏–Ω–∞ –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —Å–∏—Å—Ç–µ–º—ã –ø–ª–∞–≥–∏–Ω–æ–≤
 */

class ExamplePluginModule {
    constructor() {
        this.name = 'Example Plugin';
        this.version = '1.0.0';
        this.initialized = false;
        this.settings = {
            enabled: true,
            autoStart: false,
            notifications: true
        };
    }

    /**
     * –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–ª–∞–≥–∏–Ω–∞
     */
    async initialize() {
        console.log(`${this.name} v${this.version} –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç—Å—è...`);

        // –ó–∞–≥—Ä—É–∂–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∏–∑ localStorage
        const savedSettings = localStorage.getItem('example-plugin-settings');
        if (savedSettings) {
            try {
                this.settings = { ...this.settings, ...JSON.parse(savedSettings) };
            } catch (error) {
                console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞—Å—Ç—Ä–æ–µ–∫ –ø–ª–∞–≥–∏–Ω–∞:', error);
            }
        }

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ø–ª–∞–≥–∏–Ω
        if (this.settings.autoStart) {
            await this.start();
        }

        this.initialized = true;
        console.log(`${this.name} —É—Å–ø–µ—à–Ω–æ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω`);
    }

    /**
     * –ó–∞–ø—É—Å–∫ –ø–ª–∞–≥–∏–Ω–∞
     */
    async start() {
        console.log('–ü–ª–∞–≥–∏–Ω –∑–∞–ø—É—Å–∫–∞–µ—Ç—Å—è...');

        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –∑–∞–ø—É—Å–∫–∞
        // –ù–∞–ø—Ä–∏–º–µ—Ä, —Ä–µ–≥–∏—Å—Ç—Ä–∞—Ü–∏—è –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è UI –∏ —Ç.–¥.

        if (this.settings.notifications) {
            this.showNotification('–ü–ª–∞–≥–∏–Ω –∑–∞–ø—É—â–µ–Ω');
        }
    }

    /**
     * –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø–ª–∞–≥–∏–Ω–∞
     */
    async stop() {
        console.log('–ü–ª–∞–≥–∏–Ω –æ—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ—Ç—Å—è...');

        // –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –ª–æ–≥–∏–∫—É –æ—Å—Ç–∞–Ω–æ–≤–∫–∏
        // –ù–∞–ø—Ä–∏–º–µ—Ä, –æ—á–∏—Å—Ç–∫–∞ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ —Å–æ–±—ã—Ç–∏–π, —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è –∏ —Ç.–¥.

        if (this.settings.notifications) {
            this.showNotification('–ü–ª–∞–≥–∏–Ω –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω');
        }
    }

    /**
     * –í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞
     */
    async execute(toolId, params = {}) {
        if (!this.initialized) {
            throw new Error('–ü–ª–∞–≥–∏–Ω –Ω–µ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω');
        }

        console.log(`–í—ã–ø–æ–ª–Ω–µ–Ω–∏–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∞ ${toolId} —Å –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏:`, params);

        switch (toolId) {
            case 'greet':
                return {
                    success: true,
                    message: `–ü—Ä–∏–≤–µ—Ç –æ—Ç –ø–ª–∞–≥–∏–Ω–∞! üëã –í—ã –∏—Å–ø–æ–ª—å–∑—É–µ—Ç–µ ${this.name} v${this.version}`,
                    data: {
                        pluginName: this.name,
                        version: this.version,
                        timestamp: new Date().toISOString(),
                        toolId,
                        params
                    }
                };

            case 'info':
                return {
                    success: true,
                    message: `–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –ø–ª–∞–≥–∏–Ω–µ: ${this.name}`,
                    data: {
                        name: this.name,
                        version: this.version,
                        initialized: this.initialized,
                        settings: this.settings,
                        timestamp: new Date().toISOString()
                    }
                };

            case 'settings':
                return {
                    success: true,
                    message: '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–ª–∞–≥–∏–Ω–∞ –æ–±–Ω–æ–≤–ª–µ–Ω—ã',
                    data: {
                        settings: this.settings,
                        timestamp: new Date().toISOString()
                    }
                };

            default:
                throw new Error(`–ù–µ–∏–∑–≤–µ—Å—Ç–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç: ${toolId}`);
        }
    }

    /**
     * –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –Ω–∞—Å—Ç—Ä–æ–µ–∫
     */
    updateSettings(newSettings) {
        this.settings = { ...this.settings, ...newSettings };
        localStorage.setItem('example-plugin-settings', JSON.stringify(this.settings));

        if (this.settings.notifications) {
            this.showNotification('–ù–∞—Å—Ç—Ä–æ–π–∫–∏ –æ–±–Ω–æ–≤–ª–µ–Ω—ã');
        }
    }

    /**
     * –ü–æ–∫–∞–∑ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
     */
    showNotification(message) {
        // –ü—Ä–æ—Å—Ç–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –≤ –∫–æ–Ω—Å–æ–ª–∏
        // –í —Ä–µ–∞–ª—å–Ω–æ–º –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–∏ –∑–¥–µ—Å—å –º–æ–∂–Ω–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞—Ç—å toast —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        console.log(`[${this.name}] ${message}`);

        // –ü—Ä–∏–º–µ—Ä —Å–æ–∑–¥–∞–Ω–∏—è DOM —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è
        if (typeof document !== 'undefined') {
            const notification = document.createElement('div');
            notification.style.cssText = `
                position: fixed;
                top: 20px;
                right: 20px;
                background: var(--background-primary);
                color: var(--text-primary);
                padding: 12px 16px;
                border-radius: 8px;
                border: 1px solid var(--border);
                box-shadow: 0 4px 12px rgba(0,0,0,0.15);
                z-index: 10000;
                font-size: 14px;
                max-width: 300px;
            `;
            notification.textContent = `[${this.name}] ${message}`;

            document.body.appendChild(notification);

            // –£–¥–∞–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ —á–µ—Ä–µ–∑ 3 —Å–µ–∫—É–Ω–¥—ã
            setTimeout(() => {
                if (notification.parentNode) {
                    notification.parentNode.removeChild(notification);
                }
            }, 3000);
        }
    }

    /**
     * –ü–æ–ª—É—á–µ–Ω–∏–µ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –ø–ª–∞–≥–∏–Ω–µ
     */
    getInfo() {
        return {
            name: this.name,
            version: this.version,
            initialized: this.initialized,
            settings: this.settings
        };
    }

    /**
     * –û—á–∏—Å—Ç–∫–∞ —Ä–µ—Å—É—Ä—Å–æ–≤
     */
    async cleanup() {
        console.log(`${this.name} –æ—á–∏—â–∞–µ—Ç —Ä–µ—Å—É—Ä—Å—ã...`);

        // –û—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –ø–ª–∞–≥–∏–Ω
        await this.stop();

        // –°–æ—Ö—Ä–∞–Ω—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
        localStorage.setItem('example-plugin-settings', JSON.stringify(this.settings));

        this.initialized = false;
        console.log(`${this.name} —É—Å–ø–µ—à–Ω–æ –æ—á–∏—â–µ–Ω`);
    }
}

// –≠–∫—Å–ø–æ—Ä—Ç–∏—Ä—É–µ–º –º–æ–¥—É–ª—å –∫–∞–∫ default
export default new ExamplePluginModule();
