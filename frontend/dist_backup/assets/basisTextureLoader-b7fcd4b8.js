import{T as l,b as f,c as p}from"./Background3D-f9fe7c5c.js";import"./ui-0f47df3d.js";import"./vendor-d3a444f7.js";import"./index-f07797dc.js";import"./utils-2cc12d2a.js";import"./index-5cc3606d.js";class y{constructor(){this.supportCascades=!1}loadCubeData(o,e,i,a,r){if(Array.isArray(o))return;const s=e.getEngine().getCaps(),c={supportedCompressionFormats:{etc1:!!s.etc1,s3tc:!!s.s3tc,pvrtc:!!s.pvrtc,etc2:!!s.etc2,astc:!!s.astc,bc7:!!s.bptc}};l(o,c).then(t=>{const n=t.fileInfo.images[0].levels.length>1&&e.generateMipMaps;f(e,t),e.getEngine()._setCubeMapTextureParams(e,n),e.isReady=!0,e.onLoadedObservable.notifyObservers(e),e.onLoadedObservable.clear(),a&&a()}).catch(t=>{const n="Failed to transcode Basis file, transcoding may not be supported on this device";p.Warn(n),e.isReady=!0,r&&r(t)})}loadData(o,e,i){const a=e.getEngine().getCaps(),r={supportedCompressionFormats:{etc1:!!a.etc1,s3tc:!!a.s3tc,pvrtc:!!a.pvrtc,etc2:!!a.etc2,astc:!!a.astc,bc7:!!a.bptc}};l(o,r).then(s=>{const c=s.fileInfo.images[0].levels[0],t=s.fileInfo.images[0].levels.length>1&&e.generateMipMaps;i(c.width,c.height,t,s.format!==-1,()=>{f(e,s)})}).catch(s=>{p.Warn("Failed to transcode Basis file, transcoding may not be supported on this device"),p.Warn(`Failed to transcode Basis file: ${s}`),i(0,0,!1,!1,()=>{},!0)})}}export{y as _BasisTextureLoader};
