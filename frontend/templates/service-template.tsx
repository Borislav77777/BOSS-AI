/**
 * –®–∞–±–ª–æ–Ω –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –Ω–æ–≤–æ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
 * –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —ç—Ç–æ—Ç —Ñ–∞–π–ª –∏ –∑–∞–º–µ–Ω–∏—Ç–µ SERVICE_NAME –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ –≤–∞—à–µ–≥–æ —Å–µ—Ä–≤–∏—Å–∞
 */

import { UnifiedCard, UnifiedService } from '@/components/common';
import React, { useState } from 'react';

interface SERVICE_NAMEProps {
    className?: string;
}

export const SERVICE_NAME: React.FC<SERVICE_NAMEProps> = ({ className }) => {
    const [isActive, setIsActive] = useState(false);
    const [isLoading, setIsLoading] = useState(false);

    const handleToggle = async (active: boolean) => {
        setIsLoading(true);
        try {
            // –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏–∫—É –∞–∫—Ç–∏–≤–∞—Ü–∏–∏/–¥–µ–∞–∫—Ç–∏–≤–∞—Ü–∏–∏ —Å–µ—Ä–≤–∏—Å–∞
            await new Promise(resolve => setTimeout(resolve, 1000)); // –ò–º–∏—Ç–∞—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏
            setIsActive(active);
        } catch (error) {
            console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Å–µ—Ä–≤–∏—Å–∞:', error);
        } finally {
            setIsLoading(false);
        }
    };

    const handleConfigure = () => {
        // –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏–∫—É –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —Å–µ—Ä–≤–∏—Å–∞
        console.log('–ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Å–µ—Ä–≤–∏—Å–∞ SERVICE_NAME');
    };

    const handleAction = (actionId: string) => {
        // –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ –ª–æ–≥–∏–∫—É –¥–ª—è —Ä–∞–∑–ª–∏—á–Ω—ã—Ö –¥–µ–π—Å—Ç–≤–∏–π
        console.log('–î–µ–π—Å—Ç–≤–∏–µ:', actionId);
    };

    const actions = [
        {
            id: 'start',
            label: '–ó–∞–ø—É—Å—Ç–∏—Ç—å',
            variant: 'primary' as const,
            onClick: () => handleAction('start'),
            disabled: isActive,
        },
        {
            id: 'stop',
            label: '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å',
            variant: 'danger' as const,
            onClick: () => handleAction('stop'),
            disabled: !isActive,
        },
    ];

    return (
        <UnifiedService
            id="SERVICE_NAME"
            title="–ù–∞–∑–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞"
            description="–û–ø–∏—Å–∞–Ω–∏–µ —Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç–∏ —Å–µ—Ä–≤–∏—Å–∞"
            icon="üîß" // –ó–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –ø–æ–¥—Ö–æ–¥—è—â—É—é –∏–∫–æ–Ω–∫—É
            status={isLoading ? 'loading' : isActive ? 'active' : 'inactive'}
            variant="default"
            size="md"
            actions={actions}
            onToggle={handleToggle}
            onConfigure={handleConfigure}
            className={className}
        >
            {/* –ó–¥–µ—Å—å –¥–æ–±–∞–≤—å—Ç–µ —Å–ø–µ—Ü–∏—Ñ–∏—á–Ω—ã–π –∫–æ–Ω—Ç–µ–Ω—Ç —Å–µ—Ä–≤–∏—Å–∞ */}
            <UnifiedCard variant="outlined" size="sm">
                <p>–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω–∞—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ —Å–µ—Ä–≤–∏—Å–µ</p>
            </UnifiedCard>
        </UnifiedService>
    );
};

export default SERVICE_NAME;
