import React, { useState } from 'react';
import './AnimatedStripesDemo.css';
import AnimatedStripesGenerator from './AnimatedStripesGenerator';

/**
 * –î–ï–ú–û-–°–¢–†–ê–ù–ò–¶–ê –ì–ï–ù–ï–†–ê–¢–û–†–ê –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–• –ü–û–õ–û–°–û–ö
 *
 * –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è —Ä–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–æ–π —Å–∏—Å—Ç–µ–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ –ø–æ–ª–æ—Å–æ–∫ —Å:
 * - –û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è–º–∏ –æ—Ç –ø—Ä—è–º–æ–π —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏
 * - –°–∏–Ω—Ö—Ä–æ–Ω–Ω—ã–º –¥–≤–∏–∂–µ–Ω–∏–µ–º –ø–∞—Ä–∞–ª–ª–µ–ª—å–Ω—ã—Ö –ø–æ–ª–æ—Å–æ–∫
 * - –ó–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∑–∞–ø—É—Å–∫–∞ –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–ª–æ—Å–∫–∏
 * - –ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞–º–∏ (–∫—Ä—É–∂–æ—á–∫–∞–º–∏) –Ω–∞ –∫–æ–Ω—Ü–∞—Ö
 * - –î–∏–Ω–∞–º–∏—á–µ—Å–∫–æ–π –≥–µ–Ω–µ—Ä–∞—Ü–∏–µ–π –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤
 */

const AnimatedStripesDemo: React.FC = () => {
    const [stripeCount, setStripeCount] = useState(8);
    const [containerWidth, setContainerWidth] = useState(1000);
    const [containerHeight, setContainerHeight] = useState(500);
    const [autoGenerate, setAutoGenerate] = useState(true);
    const [generationInterval, setGenerationInterval] = useState(2000);
    const [generatedStripes, setGeneratedStripes] = useState<any[]>([]);

    const handleStripeGenerated = (stripe: any) => {
        setGeneratedStripes(prev => [...prev, stripe]);
        console.log('–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–∞ –Ω–æ–≤–∞—è –ø–æ–ª–æ—Å–∫–∞:', stripe);
    };

    return (
        <div className="animated-stripes-demo">
            <div className="demo-header">
                <h1 className="demo-title">
                    üåà –ì–ï–ù–ï–†–ê–¢–û–† –ê–ù–ò–ú–ò–†–û–í–ê–ù–ù–´–• –ü–û–õ–û–°–û–ö
                </h1>
                <p className="demo-subtitle">
                    –†–µ–≤–æ–ª—é—Ü–∏–æ–Ω–Ω–∞—è —Å–∏—Å—Ç–µ–º–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–æ–ª–æ—Å–æ–∫ —Å –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è–º–∏, –∑–∞–¥–µ—Ä–∂–∫–∞–º–∏ –∏ –∫–æ–Ω–Ω–µ–∫—Ç–æ—Ä–∞–º–∏
                </p>
            </div>

            <div className="demo-controls">
                <div className="control-group">
                    <label htmlFor="stripeCount">–ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ—Å–æ–∫:</label>
                    <input
                        id="stripeCount"
                        type="range"
                        min="1"
                        max="20"
                        value={stripeCount}
                        onChange={(e) => setStripeCount(Number(e.target.value))}
                        className="control-slider"
                    />
                    <span className="control-value">{stripeCount}</span>
                </div>

                <div className="control-group">
                    <label htmlFor="containerWidth">–®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:</label>
                    <input
                        id="containerWidth"
                        type="range"
                        min="400"
                        max="1200"
                        step="50"
                        value={containerWidth}
                        onChange={(e) => setContainerWidth(Number(e.target.value))}
                        className="control-slider"
                    />
                    <span className="control-value">{containerWidth}px</span>
                </div>

                <div className="control-group">
                    <label htmlFor="containerHeight">–í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞:</label>
                    <input
                        id="containerHeight"
                        type="range"
                        min="200"
                        max="800"
                        step="50"
                        value={containerHeight}
                        onChange={(e) => setContainerHeight(Number(e.target.value))}
                        className="control-slider"
                    />
                    <span className="control-value">{containerHeight}px</span>
                </div>

                <div className="control-group">
                    <label htmlFor="generationInterval">–ò–Ω—Ç–µ—Ä–≤–∞–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:</label>
                    <input
                        id="generationInterval"
                        type="range"
                        min="500"
                        max="5000"
                        step="250"
                        value={generationInterval}
                        onChange={(e) => setGenerationInterval(Number(e.target.value))}
                        className="control-slider"
                    />
                    <span className="control-value">{generationInterval}ms</span>
                </div>

                <div className="control-group checkbox-group">
                    <label htmlFor="autoGenerate">
                        <input
                            id="autoGenerate"
                            type="checkbox"
                            checked={autoGenerate}
                            onChange={(e) => setAutoGenerate(e.target.checked)}
                        />
                        –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
                    </label>
                </div>
            </div>

            <div className="demo-stats">
                <div className="stat-item">
                    <span className="stat-label">–°–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω–æ –ø–æ–ª–æ—Å–æ–∫:</span>
                    <span className="stat-value">{generatedStripes.length}</span>
                </div>
                <div className="stat-item">
                    <span className="stat-label">–ê–∫—Ç–∏–≤–Ω—ã—Ö –ø–æ–ª–æ—Å–æ–∫:</span>
                    <span className="stat-value">{stripeCount}</span>
                </div>
                <div className="stat-item">
                    <span className="stat-label">–†–µ–∂–∏–º:</span>
                    <span className="stat-value">
                        {autoGenerate ? '–ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π' : '–†—É—á–Ω–æ–π'}
                    </span>
                </div>
            </div>

            <div className="demo-generator">
                <AnimatedStripesGenerator
                    count={stripeCount}
                    containerWidth={containerWidth}
                    containerHeight={containerHeight}
                    autoGenerate={autoGenerate}
                    generationInterval={generationInterval}
                    onStripeGenerated={handleStripeGenerated}
                />
            </div>

            <div className="demo-features">
                <h2 className="features-title">‚ú® –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏ —Å–∏—Å—Ç–µ–º—ã</h2>
                <div className="features-grid">
                    <div className="feature-card">
                        <div className="feature-icon">üåä</div>
                        <h3>–í–æ–ª–Ω–∏—Å—Ç—ã–µ —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏–∏</h3>
                        <p>–ü–æ–ª–æ—Å–∫–∏ –¥–≤–∏–∂—É—Ç—Å—è –ø–æ —Å–∏–Ω—É—Å–æ–∏–¥–∞–ª—å–Ω—ã–º —Ç—Ä–∞–µ–∫—Ç–æ—Ä–∏—è–º —Å –Ω–∞—Å—Ç—Ä–∞–∏–≤–∞–µ–º–æ–π –∞–º–ø–ª–∏—Ç—É–¥–æ–π –∏ —á–∞—Å—Ç–æ—Ç–æ–π</p>
                    </div>

                    <div className="feature-card">
                        <div className="feature-icon">‚è±Ô∏è</div>
                        <h3>–ó–∞–¥–µ—Ä–∂–∫–∏ –∑–∞–ø—É—Å–∫–∞</h3>
                        <p>–ö–∞–∂–¥–∞—è –ø–æ–ª–æ—Å–∫–∞ –Ω–∞—á–∏–Ω–∞–µ—Ç –¥–≤–∏–∂–µ–Ω–∏–µ —Å —É–Ω–∏–∫–∞–ª—å–Ω–æ–π –∑–∞–¥–µ—Ä–∂–∫–æ–π –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤–æ–ª–Ω–æ–≤–æ–≥–æ —ç—Ñ—Ñ–µ–∫—Ç–∞</p>
                    </div>

                    <div className="feature-card">
                        <div className="feature-icon">üîó</div>
                        <h3>–ö–æ–Ω–Ω–µ–∫—Ç–æ—Ä—ã</h3>
                        <p>–ö—Ä–∞—Å–∏–≤—ã–µ –∫—Ä—É–∂–æ—á–∫–∏ –Ω–∞ –∫–æ–Ω—Ü–∞—Ö –ø–æ–ª–æ—Å–æ–∫ —Å –ø—É–ª—å—Å–∏—Ä—É—é—â–∏–º —Å–≤–µ—á–µ–Ω–∏–µ–º</p>
                    </div>

                    <div className="feature-card">
                        <div className="feature-icon">üé®</div>
                        <h3>–î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–µ —Ü–≤–µ—Ç–∞</h3>
                        <p>16-—Ü–≤–µ—Ç–Ω–∞—è –ø–∞–ª–∏—Ç—Ä–∞ —Å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–º –≤—ã–±–æ—Ä–æ–º –¥–ª—è –∫–∞–∂–¥–æ–π –ø–æ–ª–æ—Å–∫–∏</p>
                    </div>

                    <div className="feature-card">
                        <div className="feature-icon">‚ö°</div>
                        <h3>–ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å</h3>
                        <p>–û–ø—Ç–∏–º–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ CSS-–∞–Ω–∏–º–∞—Ü–∏–∏ —Å –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ–º CSS-–ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö</p>
                    </div>

                    <div className="feature-card">
                        <div className="feature-icon">üéõÔ∏è</div>
                        <h3>–ù–∞—Å—Ç—Ä–æ–π–∫–∞</h3>
                        <p>–ü–æ–ª–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –Ω–∞–¥ –ø–∞—Ä–∞–º–µ—Ç—Ä–∞–º–∏: —Ä–∞–∑–º–µ—Ä—ã, –∏–Ω—Ç–µ—Ä–≤–∞–ª—ã, —Ä–µ–∂–∏–º—ã –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏</p>
                    </div>
                </div>
            </div>

            <div className="demo-code">
                <h2 className="code-title">üíª –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è</h2>
                <pre className="code-block">
                    {`import AnimatedStripesGenerator from './AnimatedStripesGenerator';

<AnimatedStripesGenerator
  count={8}                    // –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ –ø–æ–ª–æ—Å–æ–∫
  containerWidth={1000}        // –®–∏—Ä–∏–Ω–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  containerHeight={500}        // –í—ã—Å–æ—Ç–∞ –∫–æ–Ω—Ç–µ–π–Ω–µ—Ä–∞
  autoGenerate={true}          // –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è –≥–µ–Ω–µ—Ä–∞—Ü–∏—è
  generationInterval={2000}    // –ò–Ω—Ç–µ—Ä–≤–∞–ª –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏ (–º—Å)
  onStripeGenerated={(stripe) => {
    console.log('–ù–æ–≤–∞—è –ø–æ–ª–æ—Å–∫–∞:', stripe);
  }}
/>`}
                </pre>
            </div>
        </div>
    );
};

export default AnimatedStripesDemo;
