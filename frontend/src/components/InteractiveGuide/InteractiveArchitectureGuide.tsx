import { AnimatePresence, motion } from 'framer-motion';
import {
    ArrowLeft,
    ArrowRight,
    MessageCircle,
    Mic,
    MicOff,
    Pause,
    Play,
    RotateCcw,
    Zap
} from 'lucide-react';
import type { FC } from 'react';
import { useCallback, useEffect, useState } from 'react';
import { AdvancedTTS } from './AdvancedTTS';
import './InteractiveGuide.css';

interface GuideStep {
    id: string;
    title: string;
    description: string;
    technicalDetails: string;
    userFriendlyExplanation: string;
    visualElement: string;
    position: { x: number; y: number };
    connections: string[];
    voiceScript: string;
}

const guideSteps: GuideStep[] = [
    {
        id: 'user-input',
        title: 'üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –∑–∞–¥–∞–µ—Ç –≤–æ–ø—Ä–æ—Å',
        description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –≤–≤–æ–¥–∏—Ç –≤–æ–ø—Ä–æ—Å —á–µ—Ä–µ–∑ —á–∞—Ç, –≥–æ–ª–æ—Å –∏–ª–∏ –∑–∞–≥—Ä—É–∂–∞–µ—Ç –¥–æ–∫—É–º–µ–Ω—Ç',
        technicalDetails: 'Nginx Load Balancer ‚Üí Redis Queue ‚Üí Worker Pool',
        userFriendlyExplanation: '–ü—Ä–µ–¥—Å—Ç–∞–≤—å—Ç–µ, —á—Ç–æ –≤—ã –∑–∞—Ö–æ–¥–∏—Ç–µ –≤ —É–º–Ω—É—é —é—Ä–∏–¥–∏—á–µ—Å–∫—É—é –∫–æ–Ω—Ç–æ—Ä—É –∏ —Ä–∞—Å—Å–∫–∞–∑—ã–≤–∞–µ—Ç–µ –æ —Å–≤–æ–µ–π –ø—Ä–æ–±–ª–µ–º–µ. –°–∏—Å—Ç–µ–º–∞ —Å—Ä–∞–∑—É –ø–æ–Ω–∏–º–∞–µ—Ç, —á—Ç–æ –≤–∞–º –Ω—É–∂–Ω–æ, –∏ –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –∫ –Ω—É–∂–Ω–æ–º—É —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç—É.',
        visualElement: 'üí¨',
        position: { x: 50, y: 20 },
        connections: ['intelligent-router'],
        voiceScript: '–í—ã –Ω–∞—á–∏–Ω–∞–µ—Ç–µ –¥–∏–∞–ª–æ–≥ —Å AI-—é—Ä–∏—Å—Ç–æ–º. –°–∏—Å—Ç–µ–º–∞ –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤–∞—à –∑–∞–ø—Ä–æ—Å –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ª—É—á—à–∏–π —Å–ø–æ—Å–æ–± –ø–æ–º–æ—á—å.'
    },
    {
        id: 'intelligent-router',
        title: 'üß≠ –£–º–Ω—ã–π –º–∞—Ä—à—Ä—É—Ç–∏–∑–∞—Ç–æ—Ä',
        description: 'AI –∞–Ω–∞–ª–∏–∑–∏—Ä—É–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –≤–æ–ø—Ä–æ—Å–∞ –∏ –≤—ã–±–∏—Ä–∞–µ—Ç –ø–æ–¥—Ö–æ–¥—è—â—É—é –º–æ–¥–µ–ª—å',
        technicalDetails: 'Intelligent Router ‚Üí GPT-5 Nano/Mini/Standard',
        userFriendlyExplanation: '–ö–∞–∫ –æ–ø—ã—Ç–Ω—ã–π –∞–¥–≤–æ–∫–∞—Ç, –∫–æ—Ç–æ—Ä—ã–π —Å—Ä–∞–∑—É –ø–æ–Ω–∏–º–∞–µ—Ç: –Ω—É–∂–Ω–∞ –ª–∏ –±—ã—Å—Ç—Ä–∞—è —Å–ø—Ä–∞–≤–∫–∞ –∏–ª–∏ —Å–µ—Ä—å–µ–∑–Ω–∞—è –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏—è. –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Ä–µ—à–∞—é—Ç—Å—è –±—ã—Å—Ç—Ä–æ, —Å–ª–æ–∂–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç –±–æ–ª—å—à–µ –≤–Ω–∏–º–∞–Ω–∏—è.',
        visualElement: '‚ö°',
        position: { x: 50, y: 40 },
        connections: ['gpt5-nano', 'gpt5-mini', 'gpt5-standard'],
        voiceScript: '–°–∏—Å—Ç–µ–º–∞ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Å–ª–æ–∂–Ω–æ—Å—Ç—å –≤–∞—à–µ–≥–æ –≤–æ–ø—Ä–æ—Å–∞. –ü—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã —Ä–µ—à–∞—é—Ç—Å—è –∑–∞ —Å–µ–∫—É–Ω–¥—ã, —Å–ª–æ–∂–Ω—ã–µ –ø–æ–ª—É—á–∞—é—Ç –≥–ª—É–±–æ–∫–∏–π –∞–Ω–∞–ª–∏–∑.'
    },
    {
        id: 'gpt5-nano',
        title: '‚ö° GPT-5 Nano (80% –≤–æ–ø—Ä–æ—Å–æ–≤)',
        description: '–ë—ã—Å—Ç—Ä—ã–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –ø—Ä–æ—Å—Ç—ã–µ –≤–æ–ø—Ä–æ—Å—ã',
        technicalDetails: '1-2 —Å–µ–∫—É–Ω–¥—ã, –Ω–∏–∑–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å, –≤—ã—Å–æ–∫–∞—è —Å–∫–æ—Ä–æ—Å—Ç—å',
        userFriendlyExplanation: '–ö–∞–∫ –º–ª–∞–¥—à–∏–π —é—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –±—ã—Å—Ç—Ä–æ –æ—Ç–≤–µ—á–∞–µ—Ç –Ω–∞ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –≤–æ–ø—Ä–æ—Å—ã: "–ö–∞–∫ –æ—Ñ–æ—Ä–º–∏—Ç—å –¥–æ–≥–æ–≤–æ—Ä?", "–ö–∞–∫–∏–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –Ω—É–∂–Ω—ã?"',
        visualElement: 'üöÄ',
        position: { x: 20, y: 60 },
        connections: ['response-generator'],
        voiceScript: '–î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –±—ã—Å—Ç—Ä–∞—è –º–æ–¥–µ–ª—å - –∫–∞–∫ –º–ª–∞–¥—à–∏–π —é—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –∑–Ω–∞–µ—Ç –≤—Å–µ —Å—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã.'
    },
    {
        id: 'gpt5-mini',
        title: 'üöÄ GPT-5 Mini (15% –≤–æ–ø—Ä–æ—Å–æ–≤)',
        description: '–°—Ä–µ–¥–Ω–∏–µ –∑–∞–¥–∞—á–∏ —Å –±–∞–ª–∞–Ω—Å–æ–º —Å–∫–æ—Ä–æ—Å—Ç–∏ –∏ –∫–∞—á–µ—Å—Ç–≤–∞',
        technicalDetails: '2-3 —Å–µ–∫—É–Ω–¥—ã, —Å—Ä–µ–¥–Ω—è—è —Å—Ç–æ–∏–º–æ—Å—Ç—å, —Ö–æ—Ä–æ—à–µ–µ –∫–∞—á–µ—Å—Ç–≤–æ',
        userFriendlyExplanation: '–ö–∞–∫ –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–∑–±–∏—Ä–∞–µ—Ç—Å—è –≤ –Ω—é–∞–Ω—Å–∞—Ö –∏ –º–æ–∂–µ—Ç –¥–∞—Ç—å —Ä–∞–∑–≤–µ—Ä–Ω—É—Ç—ã–π —Å–æ–≤–µ—Ç –ø–æ —Å–ª–æ–∂–Ω—ã–º —Å–∏—Ç—É–∞—Ü–∏—è–º.',
        visualElement: '‚öñÔ∏è',
        position: { x: 50, y: 60 },
        connections: ['response-generator'],
        voiceScript: '–î–ª—è –±–æ–ª–µ–µ —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –º–æ–∂–µ—Ç —Ä–∞–∑–æ–±—Ä–∞—Ç—å –Ω—é–∞–Ω—Å—ã –≤–∞—à–µ–π —Å–∏—Ç—É–∞—Ü–∏–∏.'
    },
    {
        id: 'gpt5-standard',
        title: 'üéØ GPT-5 Standard (5% –≤–æ–ø—Ä–æ—Å–æ–≤)',
        description: '–°–ª–æ–∂–Ω—ã–µ —Ä–∞—Å—Å—É–∂–¥–µ–Ω–∏—è –∏ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ',
        technicalDetails: '3-5 —Å–µ–∫—É–Ω–¥, –≤—ã—Å–æ–∫–∞—è —Å—Ç–æ–∏–º–æ—Å—Ç—å, –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–∞—á–µ—Å—Ç–≤–æ',
        userFriendlyExplanation: '–ö–∞–∫ –≥–ª–∞–≤–Ω—ã–π –ø–∞—Ä—Ç–Ω–µ—Ä —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Ñ–∏—Ä–º—ã, –∫–æ—Ç–æ—Ä—ã–π –±–µ—Ä–µ—Ç—Å—è –∑–∞ —Å–∞–º—ã–µ —Å–ª–æ–∂–Ω—ã–µ –¥–µ–ª–∞ –∏ –¥–∞–µ—Ç —ç–∫—Å–ø–µ—Ä—Ç–Ω–æ–µ –º–Ω–µ–Ω–∏–µ.',
        visualElement: 'üë®‚Äç‚öñÔ∏è',
        position: { x: 80, y: 60 },
        connections: ['response-generator'],
        voiceScript: '–î–ª—è —Å–∞–º—ã—Ö —Å–ª–æ–∂–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤ –≤–∫–ª—é—á–∞–µ—Ç—Å—è –≥–ª–∞–≤–Ω—ã–π —ç–∫—Å–ø–µ—Ä—Ç - –∫–∞–∫ –ø–∞—Ä—Ç–Ω–µ—Ä —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–π —Ñ–∏—Ä–º—ã —Å –º–Ω–æ–≥–æ–ª–µ—Ç–Ω–∏–º –æ–ø—ã—Ç–æ–º.'
    },
    {
        id: 'raptor-engine',
        title: 'üå≥ RAPTOR Engine',
        description: '–õ–æ–∫–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤ –∏ –ø–æ–∏—Å–∫',
        technicalDetails: '–†–µ–∫—É—Ä—Å–∏–≤–Ω–∞—è –∫–ª–∞—Å—Ç–µ—Ä–∏–∑–∞—Ü–∏—è, –¥—Ä–µ–≤–æ–≤–∏–¥–Ω–∞—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—è',
        userFriendlyExplanation: '–ö–∞–∫ —É–º–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –Ω—É–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã –∏ —Å–≤—è–∑—ã–≤–∞–µ—Ç –∏—Ö –º–µ–∂–¥—É —Å–æ–±–æ–π. –†–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ - –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –Ω–∏–∫—É–¥–∞ –Ω–µ –ø–µ—Ä–µ–¥–∞—é—Ç—Å—è.',
        visualElement: 'üå≤',
        position: { x: 20, y: 80 },
        connections: ['local-processing'],
        voiceScript: 'RAPTOR - —ç—Ç–æ –∫–∞–∫ —É–º–Ω–∞—è –±–∏–±–ª–∏–æ—Ç–µ–∫–∞, –∫–æ—Ç–æ—Ä–∞—è –º–≥–Ω–æ–≤–µ–Ω–Ω–æ –Ω–∞—Ö–æ–¥–∏—Ç –Ω—É–∂–Ω—ã–µ –¥–æ–∫—É–º–µ–Ω—Ç—ã. –í—Å–µ —Ä–∞–±–æ—Ç–∞–µ—Ç –ª–æ–∫–∞–ª—å–Ω–æ, –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –≤ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏.'
    },
    {
        id: 'local-processing',
        title: 'üè† –õ–æ–∫–∞–ª—å–Ω–∞—è –æ–±—Ä–∞–±–æ—Ç–∫–∞',
        description: 'OCR, —ç–º–±–µ–¥–¥–∏–Ω–≥–∏ –∏ –ø–æ–∏—Å–∫ —Ä–∞–±–æ—Ç–∞—é—Ç –ª–æ–∫–∞–ª—å–Ω–æ',
        technicalDetails: 'BGE-M3, Tesseract 5, Qdrant - –≤—Å–µ –ª–æ–∫–∞–ª—å–Ω–æ',
        userFriendlyExplanation: '–í—Å–µ –≤–∞—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ø—Ä—è–º–æ –Ω–∞ –≤–∞—à–µ–º —Å–µ—Ä–≤–µ—Ä–µ. –ù–∏–∫—Ç–æ –Ω–µ –≤–∏–¥–∏—Ç –≤–∞—à–∏ –¥–∞–Ω–Ω—ã–µ - –ø–æ–ª–Ω–∞—è –∫–æ–Ω—Ñ–∏–¥–µ–Ω—Ü–∏–∞–ª—å–Ω–æ—Å—Ç—å.',
        visualElement: 'üîí',
        position: { x: 20, y: 100 },
        connections: ['security'],
        voiceScript: '–í—Å–µ –≤–∞—à–∏ –¥–æ–∫—É–º–µ–Ω—Ç—ã –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞—é—Ç—Å—è –ª–æ–∫–∞–ª—å–Ω–æ. –≠—Ç–æ –∫–∞–∫ –∏–º–µ—Ç—å –ª–∏—á–Ω–æ–≥–æ —Å–µ–∫—Ä–µ—Ç–∞—Ä—è, –∫–æ—Ç–æ—Ä—ã–π —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –¥–ª—è –≤–∞—Å.'
    },
    {
        id: 'security',
        title: 'üõ°Ô∏è –ë–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç—å 152-–§–ó',
        description: '–ü–æ–ª–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º –∑–∞—â–∏—Ç—ã –¥–∞–Ω–Ω—ã—Ö',
        technicalDetails: 'PII –∞–Ω–æ–Ω–∏–º–∏–∑–∞—Ü–∏—è, —à–∏—Ñ—Ä–æ–≤–∞–Ω–∏–µ, –∞—É–¥–∏—Ç –¥–æ—Å—Ç—É–ø–∞',
        userFriendlyExplanation: '–°–∏—Å—Ç–µ–º–∞ –ø–æ–ª–Ω–æ—Å—Ç—å—é —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ä–æ—Å—Å–∏–π—Å–∫–æ–º—É –∑–∞–∫–æ–Ω–æ–¥–∞—Ç–µ–ª—å—Å—Ç–≤—É –æ –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö. –í–∞—à–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –ø–æ–¥ –Ω–∞–¥–µ–∂–Ω–æ–π –∑–∞—â–∏—Ç–æ–π.',
        visualElement: 'üõ°Ô∏è',
        position: { x: 20, y: 120 },
        connections: ['response-generator'],
        voiceScript: '–í–∞—à–∏ –¥–∞–Ω–Ω—ã–µ –∑–∞—â–∏—â–µ–Ω—ã –ø–æ –≤—Å–µ–º —Å—Ç–∞–Ω–¥–∞—Ä—Ç–∞–º. –°–∏—Å—Ç–µ–º–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç 152-–§–ó –∏ —Ä–∞–±–æ—Ç–∞–µ—Ç –∫–∞–∫ —à–≤–µ–π—Ü–∞—Ä—Å–∫–∏–π –±–∞–Ω–∫.'
    },
    {
        id: 'response-generator',
        title: 'üìù –ì–µ–Ω–µ—Ä–∞—Ç–æ—Ä –æ—Ç–≤–µ—Ç–æ–≤',
        description: '–§–æ—Ä–º–∞—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∏ –æ—Ç–ø—Ä–∞–≤–∫–∞ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é',
        technicalDetails: '–°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –≤—ã–≤–æ–¥, –∫–æ–Ω—Ç–µ–∫—Å—Ç–Ω–∞—è –∞–¥–∞–ø—Ç–∞—Ü–∏—è',
        userFriendlyExplanation: 'AI –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –≤ –ø–æ–Ω—è—Ç–Ω–æ–º –≤–∏–¥–µ –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º. –ö–∞–∫ –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è—Å–Ω—è–µ—Ç —Å–ª–æ–∂–Ω—ã–µ –≤–µ—â–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.',
        visualElement: 'üìÑ',
        position: { x: 50, y: 100 },
        connections: ['user-output'],
        voiceScript: 'AI –æ—Ñ–æ—Ä–º–ª—è–µ—Ç –æ—Ç–≤–µ—Ç –∏ –æ—Ç–ø—Ä–∞–≤–ª—è–µ—Ç –≤–∞–º. –ö–∞–∫ –æ–ø—ã—Ç–Ω—ã–π —é—Ä–∏—Å—Ç, –∫–æ—Ç–æ—Ä—ã–π –æ–±—ä—è—Å–Ω—è–µ—Ç —Å–ª–æ–∂–Ω—ã–µ –≤–µ—â–∏ –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏.'
    },
    {
        id: 'user-output',
        title: '‚úÖ –ì–æ—Ç–æ–≤—ã–π –æ—Ç–≤–µ—Ç',
        description: '–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–ª—É—á–∞–µ—Ç —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –æ—Ç–≤–µ—Ç',
        technicalDetails: '–ü–µ—Ä—Å–æ–Ω–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç, –æ–±—Ä–∞—Ç–Ω–∞—è —Å–≤—è–∑—å',
        userFriendlyExplanation: '–í—ã –ø–æ–ª—É—á–∞–µ—Ç–µ —á–µ—Ç–∫–∏–π, –ø–æ–Ω—è—Ç–Ω—ã–π –æ—Ç–≤–µ—Ç —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏. –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–æ–º–∏–Ω–∞–µ—Ç –≤–∞—à –≤–æ–ø—Ä–æ—Å –¥–ª—è –±—É–¥—É—â–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π.',
        visualElement: 'üéâ',
        position: { x: 50, y: 120 },
        connections: [],
        voiceScript: '–ì–æ—Ç–æ–≤–æ! –í—ã –ø–æ–ª—É—á–∏–ª–∏ –ø—Ä–æ—Ñ–µ—Å—Å–∏–æ–Ω–∞–ª—å–Ω—ã–π —é—Ä–∏–¥–∏—á–µ—Å–∫–∏–π —Å–æ–≤–µ—Ç. –°–∏—Å—Ç–µ–º–∞ –∑–∞–ø–æ–º–Ω–∏–ª–∞ –≤–∞—à –≤–æ–ø—Ä–æ—Å –¥–ª—è –±—É–¥—É—â–∏—Ö —É–ª—É—á—à–µ–Ω–∏–π.'
    }
];

const InteractiveArchitectureGuide: FC = () => {
    const [currentStep, setCurrentStep] = useState(0);
    const [isPlaying, setIsPlaying] = useState(false);
    const [isMuted, setIsMuted] = useState(false);
    const [isAutoPlay, setIsAutoPlay] = useState(false);
    const [isRecording, setIsRecording] = useState(false);
    const [userMessage, setUserMessage] = useState('');
    const [chatHistory, setChatHistory] = useState<Array<{ role: string, content: string }>>([]);

    // const audioRef = useRef<HTMLAudioElement>(null);
    const speechSynthesis = window.speechSynthesis;

    // –£–ª—É—á—à–µ–Ω–Ω–æ–µ –≥–æ–ª–æ—Å–æ–≤–æ–µ —Å–æ–ø—Ä–æ–≤–æ–∂–¥–µ–Ω–∏–µ
    const speakText = useCallback((text: string) => {
        if (isMuted) return;

        if (speechSynthesis.speaking) {
            speechSynthesis.cancel();
        }

        const utterance = new SpeechSynthesisUtterance(text);
        utterance.lang = 'ru-RU';
        utterance.rate = 0.9; // –ù–µ–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ
        utterance.pitch = 1.1; // –ß—É—Ç—å –≤—ã—à–µ
        utterance.volume = 0.8; // –ì—Ä–æ–º—á–µ

        // –ü–æ–ø—Ä–æ–±—É–µ–º –Ω–∞–π—Ç–∏ –ª—É—á—à–∏–π –≥–æ–ª–æ—Å
        const voices = speechSynthesis.getVoices();
        const russianVoice = voices.find(voice =>
            voice.lang.startsWith('ru') &&
            (voice.name.includes('Google') || voice.name.includes('Microsoft'))
        );

        if (russianVoice) {
            utterance.voice = russianVoice;
        }

        speechSynthesis.speak(utterance);
    }, [isMuted, speechSynthesis]);

    const handleNext = useCallback(() => {
        if (currentStep < guideSteps.length - 1) {
            setCurrentStep(currentStep + 1);
            speakText(guideSteps[currentStep + 1].voiceScript);
        }
    }, [currentStep, speakText]);

    // –ê–≤—Ç–æ–≤–æ—Å–ø—Ä–æ–∏–∑–≤–µ–¥–µ–Ω–∏–µ
    useEffect(() => {
        if (isAutoPlay && !isPlaying) {
            const timer = setTimeout(() => {
                handleNext();
            }, 3000);
            return () => clearTimeout(timer);
        }
    }, [currentStep, isAutoPlay, isPlaying, handleNext]);

    const handlePrevious = () => {
        if (currentStep > 0) {
            setCurrentStep(currentStep - 1);
            speakText(guideSteps[currentStep - 1].voiceScript);
        }
    };

    const handlePlay = () => {
        setIsPlaying(!isPlaying);
        if (!isPlaying) {
            speakText(guideSteps[currentStep].voiceScript);
        } else {
            speechSynthesis.cancel();
        }
    };

    const handleAutoPlay = () => {
        setIsAutoPlay(!isAutoPlay);
        setIsPlaying(!isAutoPlay);
    };

    const handleToggleMute = () => {
        setIsMuted(!isMuted);
        if (!isMuted) {
            speechSynthesis.cancel();
        }
    };

    const handleReset = () => {
        setCurrentStep(0);
        setIsPlaying(false);
        setIsAutoPlay(false);
        speechSynthesis.cancel();
    };

    const handleVoiceInput = () => {
        setIsRecording(!isRecording);
        // –ó–¥–µ—Å—å –±—É–¥–µ—Ç –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å Web Speech API
    };

    const handleSendMessage = () => {
        if (userMessage.trim()) {
            const newMessage = { role: 'user', content: userMessage };
            setChatHistory([...chatHistory, newMessage]);
            setUserMessage('');

            // –°–∏–º—É–ª—è—Ü–∏—è –æ—Ç–≤–µ—Ç–∞ AI
            setTimeout(() => {
                const aiResponse = { role: 'assistant', content: `–û—Ç–ª–∏—á–Ω–æ! –Ø –ø–æ–º–æ–≥—É –≤–∞–º —Ä–∞–∑–æ–±—Ä–∞—Ç—å—Å—è —Å ${userMessage}. –î–∞–≤–∞–π—Ç–µ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä—É —Å–∏—Å—Ç–µ–º—ã...` };
                setChatHistory(prev => [...prev, aiResponse]);
            }, 1000);
        }
    };

    const currentStepData = guideSteps[currentStep];

    return (
        <div className="h-full flex flex-col bg-gradient-to-br from-slate-900 via-purple-900 to-slate-900 overflow-hidden">
            {/* –ó–∞–≥–æ–ª–æ–≤–æ–∫ */}
            <div className="p-6 border-b border-slate-700">
                <h1 className="text-2xl font-bold text-white mb-2">
                    üéØ –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω—ã–π –≥–∏–¥ –ø–æ –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–µ AI-–Æ—Ä–∏—Å—Ç–∞
                </h1>
                <p className="text-slate-300 mb-4">
                    –ü–æ–Ω—è—Ç–Ω–æ–µ –æ–±—ä—è—Å–Ω–µ–Ω–∏–µ —Å–ª–æ–∂–Ω—ã—Ö —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–π –ø—Ä–æ—Å—Ç—ã–º–∏ —Å–ª–æ–≤–∞–º–∏
                </p>
                <div className="bg-blue-500/10 border border-blue-500/20 rounded-lg p-4">
                    <p className="text-sm text-blue-300">
                        üí¨ <strong>–û–±—â–∞–π—Ç–µ—Å—å —á–µ—Ä–µ–∑ —á–∞—Ç!</strong> –ó–∞–¥–∞–≤–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å—ã –æ –ª—é–±–æ–º –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–µ —Å–∏—Å—Ç–µ–º—ã,
                        –∏ AI-–Æ—Ä–∏—Å—Ç –ø–æ–¥—Ä–æ–±–Ω–æ –æ–±—ä—è—Å–Ω–∏—Ç, –∫–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç.
                    </p>
                </div>
            </div>

            <div className="flex-1 flex overflow-hidden">
                {/* –õ–µ–≤–∞—è –ø–∞–Ω–µ–ª—å - –Ω–∞–≤–∏–≥–∞—Ü–∏—è */}
                <div className="w-80 bg-slate-800 border-r border-slate-700 p-6 overflow-y-auto">
                    <div className="space-y-4">
                        {/* –ü—Ä–æ–≥—Ä–µ—Å—Å */}
                        <div className="bg-slate-700 rounded-lg p-4">
                            <div className="flex items-center justify-between mb-2">
                                <span className="text-sm text-slate-300">–ü—Ä–æ–≥—Ä–µ—Å—Å</span>
                                <span className="text-sm text-slate-300">{currentStep + 1}/{guideSteps.length}</span>
                            </div>
                            <div className="w-full bg-slate-600 rounded-full h-2">
                                <div
                                    className={`bg-blue-500 progress-bar-fill progress-bar progress-${Math.round(((currentStep + 1) / guideSteps.length) * 100)}`}
                                />
                            </div>
                        </div>

                        {/* –£–ø—Ä–∞–≤–ª–µ–Ω–∏–µ */}
                        <div className="space-y-2">
                            <button
                                onClick={handlePrevious}
                                disabled={currentStep === 0}
                                className="w-full flex items-center gap-2 px-4 py-2 bg-slate-700 hover:bg-slate-600 disabled:opacity-50 disabled:cursor-not-allowed rounded-lg transition-colors"
                            >
                                <ArrowLeft className="w-4 h-4" />
                                –ü—Ä–µ–¥—ã–¥—É—â–∏–π
                            </button>

                            <button
                                onClick={handleNext}
                                disabled={currentStep === guideSteps.length - 1}
                                className="w-full flex items-center gap-2 px-4 py-2 bg-blue-600 hover:bg-blue-700 disabled:opacity-50 disabled:cursor-not-allowed rounded-lg transition-colors"
                            >
                                –°–ª–µ–¥—É—é—â–∏–π
                                <ArrowRight className="w-4 h-4" />
                            </button>
                        </div>

                        {/* –ú–µ–¥–∏–∞ –∫–æ–Ω—Ç—Ä–æ–ª—ã */}
                        <div className="grid grid-cols-2 gap-2">
                            <button
                                onClick={handlePlay}
                                className="flex items-center gap-2 px-3 py-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors"
                            >
                                {isPlaying ? <Pause className="w-4 h-4" /> : <Play className="w-4 h-4" />}
                                {isPlaying ? '–ü–∞—É–∑–∞' : '–ò–≥—Ä–∞—Ç—å'}
                            </button>

                            <AdvancedTTS
                                text={guideSteps[currentStep]?.voiceScript || ''}
                                isMuted={isMuted}
                                onToggleMute={handleToggleMute}
                            />
                        </div>

                        <button
                            onClick={handleAutoPlay}
                            className={`w-full flex items-center gap-2 px-4 py-2 rounded-lg transition-colors ${isAutoPlay ? 'bg-green-600 hover:bg-green-700' : 'bg-slate-700 hover:bg-slate-600'
                                }`}
                        >
                            <Zap className="w-4 h-4" />
                            {isAutoPlay ? '–ê–≤—Ç–æ–ø–ª–µ–π –≤–∫–ª—é—á–µ–Ω' : '–í–∫–ª—é—á–∏—Ç—å –∞–≤—Ç–æ–ø–ª–µ–π'}
                        </button>

                        <button
                            onClick={handleReset}
                            className="w-full flex items-center gap-2 px-4 py-2 bg-slate-700 hover:bg-slate-600 rounded-lg transition-colors"
                        >
                            <RotateCcw className="w-4 h-4" />
                            –°–±—Ä–æ—Å–∏—Ç—å
                        </button>

                        {/* –°–ø–∏—Å–æ–∫ —à–∞–≥–æ–≤ */}
                        <div className="space-y-2">
                            <h3 className="text-sm font-semibold text-slate-300">–®–∞–≥–∏:</h3>
                            {guideSteps.map((step, index) => (
                                <button
                                    key={step.id}
                                    onClick={() => {
                                        setCurrentStep(index);
                                        speakText(step.voiceScript);
                                    }}
                                    className={`w-full text-left p-3 rounded-lg transition-colors interactive-button ${index === currentStep
                                        ? ''
                                        : 'secondary'
                                        }`}
                                >
                                    <div className="text-sm font-medium">{step.title}</div>
                                    <div className="text-xs opacity-75">{step.description}</div>
                                </button>
                            ))}
                        </div>
                    </div>
                </div>

                {/* –¶–µ–Ω—Ç—Ä–∞–ª—å–Ω–∞—è –æ–±–ª–∞—Å—Ç—å - –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è */}
                <div className="flex-1 p-6 overflow-y-auto">
                    <div className="relative h-full bg-slate-800 rounded-lg overflow-hidden">
                        {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω–∞—è —Å—Ö–µ–º–∞ */}
                        <div className="relative w-full h-full">
                            {guideSteps.map((step, index) => (
                                <motion.div
                                    key={step.id}
                                    initial={{ opacity: 0, scale: 0.8 }}
                                    animate={{
                                        opacity: index <= currentStep ? 1 : 0.3,
                                        scale: index === currentStep ? 1.1 : 1,
                                        x: step.position.x * 8,
                                        y: step.position.y * 4
                                    }}
                                    transition={{ duration: 0.5, delay: index * 0.1 }}
                                    className={`absolute transform -translate-x-1/2 -translate-y-1/2 ${index === currentStep ? 'z-10' : 'z-0'
                                        }`}
                                >
                                    <div className={`
                                        p-4 rounded-lg border-2 transition-all duration-300
                                        ${index === currentStep
                                            ? 'bg-blue-600 border-blue-400 shadow-lg shadow-blue-500/50'
                                            : 'bg-slate-700 border-slate-600'
                                        }
                                    `}>
                                        <div className="text-2xl mb-2">{step.visualElement}</div>
                                        <div className="text-sm font-semibold text-white mb-1">{step.title}</div>
                                        <div className="text-xs text-slate-300">{step.description}</div>
                                    </div>
                                </motion.div>
                            ))}

                            {/* –ê–Ω–∏–º–∏—Ä–æ–≤–∞–Ω–Ω—ã–µ —Å—Ç—Ä–µ–ª–∫–∏ */}
                            <AnimatePresence>
                                {currentStep > 0 && (
                                    <motion.div
                                        initial={{ opacity: 0 }}
                                        animate={{ opacity: 1 }}
                                        exit={{ opacity: 0 }}
                                        className="absolute top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"
                                    >
                                        <ArrowRight className="w-8 h-8 text-blue-400 animate-pulse" />
                                    </motion.div>
                                )}
                            </AnimatePresence>
                        </div>
                    </div>
                </div>

                {/* –ü—Ä–∞–≤–∞—è –ø–∞–Ω–µ–ª—å - –¥–µ—Ç–∞–ª–∏ –∏ —á–∞—Ç */}
                <div className="w-80 bg-slate-800 border-l border-slate-700 p-6">
                    <div className="space-y-6">
                        {/* –¢–µ–∫—É—â–∏–π —à–∞–≥ */}
                        <div className="bg-slate-700 rounded-lg p-4">
                            <h3 className="text-lg font-semibold text-white mb-2">
                                {currentStepData.title}
                            </h3>
                            <p className="text-sm text-slate-300 mb-3">
                                {currentStepData.userFriendlyExplanation}
                            </p>
                            <div className="text-xs text-slate-400">
                                <strong>–¢–µ—Ö–Ω–∏—á–µ—Å–∫–∏:</strong> {currentStepData.technicalDetails}
                            </div>
                        </div>

                        {/* –ß–∞—Ç —Å AI */}
                        <div className="bg-slate-700 rounded-lg p-4">
                            <h3 className="text-sm font-semibold text-white mb-3 flex items-center gap-2">
                                <MessageCircle className="w-4 h-4" />
                                –ß–∞—Ç —Å AI-–≥–∏–¥–æ–º
                            </h3>

                            <div className="space-y-2 mb-4 max-h-40 overflow-y-auto">
                                {chatHistory.map((message, index) => (
                                    <div key={index} className={`text-xs p-2 rounded ${message.role === 'user'
                                        ? 'bg-blue-600 text-white ml-4'
                                        : 'bg-slate-600 text-slate-300 mr-4'
                                        }`}>
                                        {message.content}
                                    </div>
                                ))}
                            </div>

                            <div className="flex gap-2">
                                <input
                                    type="text"
                                    value={userMessage}
                                    onChange={(e) => setUserMessage(e.target.value)}
                                    placeholder="–ó–∞–¥–∞–π—Ç–µ –≤–æ–ø—Ä–æ—Å..."
                                    className="flex-1 px-3 py-2 bg-slate-600 text-white text-sm rounded border border-slate-500 focus:outline-none focus:border-blue-500"
                                    onKeyPress={(e) => e.key === 'Enter' && handleSendMessage()}
                                />
                                <button
                                    onClick={handleSendMessage}
                                    className="px-3 py-2 bg-blue-600 hover:bg-blue-700 text-white text-sm rounded transition-colors"
                                >
                                    –û—Ç–ø—Ä–∞–≤–∏—Ç—å
                                </button>
                            </div>

                            <button
                                onClick={handleVoiceInput}
                                className={`w-full mt-2 flex items-center gap-2 px-3 py-2 rounded transition-colors ${isRecording
                                    ? 'bg-red-600 hover:bg-red-700'
                                    : 'bg-slate-600 hover:bg-slate-500'
                                    }`}
                            >
                                {isRecording ? <MicOff className="w-4 h-4" /> : <Mic className="w-4 h-4" />}
                                {isRecording ? '–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –∑–∞–ø–∏—Å—å' : '–ì–æ–ª–æ—Å–æ–≤–æ–π –≤–≤–æ–¥'}
                            </button>
                        </div>

                        {/* –ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è */}
                        <div className="space-y-2">
                            <h3 className="text-sm font-semibold text-white">–ë—ã—Å—Ç—Ä—ã–µ –¥–µ–π—Å—Ç–≤–∏—è:</h3>
                            <button className="w-full text-left p-2 rounded text-sm transition-colors interactive-button secondary">
                                ü§î –û–±—ä—è—Å–Ω–∏ –ø—Ä–æ—â–µ
                            </button>
                            <button className="w-full text-left p-2 rounded text-sm transition-colors interactive-button secondary">
                                üí° –ü–æ–∫–∞–∂–∏ –ø—Ä–∏–º–µ—Ä
                            </button>
                            <button className="w-full text-left p-2 rounded text-sm transition-colors interactive-button secondary">
                                üîç –ü–æ–¥—Ä–æ–±–Ω–µ–µ
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    );
};

export { InteractiveArchitectureGuide };
export default InteractiveArchitectureGuide;
