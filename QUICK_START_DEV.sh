#!/bin/bash

# üöÄ Boss AI Platform - Quick Start –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞
# –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ –∏ –∑–∞–ø—É—Å–∫ –ø–ª–∞—Ç—Ñ–æ—Ä–º—ã

set -e  # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –ø—Ä–∏ –æ—à–∏–±–∫–µ

echo "üöÄ Boss AI Platform - Quick Start –¥–ª—è —Ä–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫–∞"
echo "=================================================="
echo ""

# –¶–≤–µ—Ç–∞ –¥–ª—è –≤—ã–≤–æ–¥–∞
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏—è
log() {
    echo -e "${BLUE}[$(date +'%Y-%m-%d %H:%M:%S')]${NC} $1"
}

success() {
    echo -e "${GREEN}‚úÖ $1${NC}"
}

warning() {
    echo -e "${YELLOW}‚ö†Ô∏è  $1${NC}"
}

error() {
    echo -e "${RED}‚ùå $1${NC}"
    exit 1
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
check_requirements() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã—Ö —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π..."

    # Node.js
    if ! command -v node &> /dev/null; then
        error "Node.js –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ Node.js 18+ —Å https://nodejs.org"
    fi

    NODE_VERSION=$(node -v | cut -d'v' -f2 | cut -d'.' -f1)
    if [ "$NODE_VERSION" -lt 18 ]; then
        error "–¢—Ä–µ–±—É–µ—Ç—Å—è Node.js 18+. –¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è: $(node -v)"
    fi
    success "Node.js $(node -v) ‚úì"

    # npm
    if ! command -v npm &> /dev/null; then
        error "npm –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω"
    fi
    success "npm $(npm -v) ‚úì"

    # SQLite
    if ! command -v sqlite3 &> /dev/null; then
        warning "SQLite –Ω–µ –Ω–∞–π–¥–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: sudo apt-get install sqlite3"
    else
        success "SQLite $(sqlite3 --version | cut -d' ' -f1) ‚úì"
    fi

    # PM2 (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    if ! command -v pm2 &> /dev/null; then
        warning "PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g pm2"
    else
        success "PM2 $(pm2 -v) ‚úì"
    fi
}

# –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π
install_dependencies() {
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π..."

    # Backend (API Gateway)
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è API Gateway..."
    cd backend/main
    if [ ! -d "node_modules" ]; then
        npm install
        success "API Gateway –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        success "API Gateway –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    cd ../..

    # Backend (Ozon Manager)
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Ozon Manager..."
    cd backend/ozon-manager
    if [ ! -d "node_modules" ]; then
        npm install
        success "Ozon Manager –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        success "Ozon Manager –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    cd ../..

    # Frontend
    log "–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–µ–π –¥–ª—è Frontend..."
    cd frontend
    if [ ! -d "node_modules" ]; then
        npm install
        success "Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    else
        success "Frontend –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏ —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
    fi
    cd ..
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏
check_config() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏–∏..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ .env —Ñ–∞–π–ª–æ–≤
    if [ ! -f "backend/main/.env" ]; then
        error "–§–∞–π–ª backend/main/.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    success "API Gateway .env –Ω–∞–π–¥–µ–Ω"

    if [ ! -f "backend/ozon-manager/.env" ]; then
        error "–§–∞–π–ª backend/ozon-manager/.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    success "Ozon Manager .env –Ω–∞–π–¥–µ–Ω"

    if [ ! -f "frontend/.env" ]; then
        error "–§–∞–π–ª frontend/.env –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
    success "Frontend .env –Ω–∞–π–¥–µ–Ω"

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    if [ ! -f "backend/ozon-manager/data/ozon_manager.db" ]; then
        warning "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞. –°–æ–∑–¥–∞—é..."
        mkdir -p backend/ozon-manager/data
        touch backend/ozon-manager/data/ozon_manager.db
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö —Å–æ–∑–¥–∞–Ω–∞"
    else
        success "–ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–∞–π–¥–µ–Ω–∞"
    fi
}

# –ö–æ–º–ø–∏–ª—è—Ü–∏—è TypeScript
build_typescript() {
    log "–ö–æ–º–ø–∏–ª—è—Ü–∏—è TypeScript..."

    # API Gateway
    log "–ö–æ–º–ø–∏–ª—è—Ü–∏—è API Gateway..."
    cd backend/main
    if [ -f "tsconfig.json" ]; then
        npm run build
        success "API Gateway —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω"
    else
        warning "tsconfig.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ API Gateway"
    fi
    cd ../..

    # Ozon Manager
    log "–ö–æ–º–ø–∏–ª—è—Ü–∏—è Ozon Manager..."
    cd backend/ozon-manager
    if [ -f "tsconfig.json" ]; then
        npm run build
        success "Ozon Manager —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω"
    else
        warning "tsconfig.json –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Ozon Manager"
    fi
    cd ../..

    # Frontend
    log "–ö–æ–º–ø–∏–ª—è—Ü–∏—è Frontend..."
    cd frontend
    if [ -f "vite.config.ts" ]; then
        npm run build
        success "Frontend —Å–∫–æ–º–ø–∏–ª–∏—Ä–æ–≤–∞–Ω"
    else
        warning "vite.config.ts –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ Frontend"
    fi
    cd ..
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–æ–≤
check_ports() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–æ–≤..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 3000
    if lsof -Pi :3000 -sTCP:LISTEN -t >/dev/null 2>&1; then
        warning "–ü–æ—Ä—Ç 3000 —É–∂–µ –∑–∞–Ω—è—Ç. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç"
        lsof -Pi :3000 -sTCP:LISTEN
    else
        success "–ü–æ—Ä—Ç 3000 —Å–≤–æ–±–æ–¥–µ–Ω"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—Ä—Ç–∞ 4200
    if lsof -Pi :4200 -sTCP:LISTEN -t >/dev/null 2>&1; then
        warning "–ü–æ—Ä—Ç 4200 —É–∂–µ –∑–∞–Ω—è—Ç. –û—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ –ø—Ä–æ—Ü–µ—Å—Å –∏–ª–∏ –∏–∑–º–µ–Ω–∏—Ç–µ –ø–æ—Ä—Ç"
        lsof -Pi :4200 -sTCP:LISTEN
    else
        success "–ü–æ—Ä—Ç 4200 —Å–≤–æ–±–æ–¥–µ–Ω"
    fi
}

# –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ
start_development() {
    log "–ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ..."

    echo ""
    echo "üöÄ –ó–∞–ø—É—Å–∫–∞—é —Å–µ—Ä–≤–∏—Å—ã..."
    echo "–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo ""

    # –°–æ–∑–¥–∞—Ç—å –ø–∞–ø–∫—É –¥–ª—è –ª–æ–≥–æ–≤
    mkdir -p logs

    # –ó–∞–ø—É—Å–∫ API Gateway
    log "–ó–∞–ø—É—Å–∫ API Gateway –Ω–∞ –ø–æ—Ä—Ç—É 3000..."
    cd backend/main
    npm run dev > ../../logs/api-gateway.log 2>&1 &
    API_GATEWAY_PID=$!
    cd ../..

    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
    sleep 2

    # –ó–∞–ø—É—Å–∫ Ozon Manager
    log "–ó–∞–ø—É—Å–∫ Ozon Manager –Ω–∞ –ø–æ—Ä—Ç—É 4200..."
    cd backend/ozon-manager
    npm run dev > ../../logs/ozon-manager.log 2>&1 &
    OZON_MANAGER_PID=$!
    cd ../..

    # –ù–µ–±–æ–ª—å—à–∞—è –ø–∞—É–∑–∞
    sleep 2

    # –ó–∞–ø—É—Å–∫ Frontend
    log "–ó–∞–ø—É—Å–∫ Frontend –Ω–∞ –ø–æ—Ä—Ç—É 3000 (Vite dev server)..."
    cd frontend
    npm run dev > ../logs/frontend.log 2>&1 &
    FRONTEND_PID=$!
    cd ..

    # –§—É–Ω–∫—Ü–∏—è –¥–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –≤—Å–µ—Ö –ø—Ä–æ—Ü–µ—Å—Å–æ–≤
    cleanup() {
        echo ""
        log "–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –≤—Å–µ—Ö —Å–µ—Ä–≤–∏—Å–æ–≤..."
        kill $API_GATEWAY_PID $OZON_MANAGER_PID $FRONTEND_PID 2>/dev/null || true
        success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω—ã"
        exit 0
    }

    # –ü–µ—Ä–µ—Ö–≤–∞—Ç Ctrl+C
    trap cleanup SIGINT SIGTERM

    # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –∑–∞–ø—É—Å–∫–∞
    sleep 5

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞
    check_services_status

    echo ""
    success "–í—Å–µ —Å–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã!"
    echo ""
    echo "üåê –î–æ—Å—Ç—É–ø–Ω—ã–µ URL:"
    echo "   Frontend:     http://localhost:3000"
    echo "   API Gateway:  http://localhost:3000/api/health"
    echo "   Ozon Manager: http://localhost:4200/health"
    echo ""
    echo "üìã –õ–æ–≥–∏:"
    echo "   API Gateway:  tail -f logs/api-gateway.log"
    echo "   Ozon Manager: tail -f logs/ozon-manager.log"
    echo "   Frontend:     tail -f logs/frontend.log"
    echo ""
    echo "üõë –î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C"
    echo ""

    # –ñ–¥–µ–º –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è
    wait
}

# –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤
check_services_status() {
    log "–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Å–µ—Ä–≤–∏—Å–æ–≤..."

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ API Gateway
    if curl -s http://localhost:3000/api/health > /dev/null 2>&1; then
        success "API Gateway —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "API Gateway –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Ozon Manager
    if curl -s http://localhost:4200/health > /dev/null 2>&1; then
        success "Ozon Manager —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "Ozon Manager –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi

    # –ü—Ä–æ–≤–µ—Ä–∫–∞ Frontend
    if curl -s http://localhost:3000 > /dev/null 2>&1; then
        success "Frontend —Ä–∞–±–æ—Ç–∞–µ—Ç"
    else
        warning "Frontend –Ω–µ –æ—Ç–≤–µ—á–∞–µ—Ç"
    fi
}

# –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ (PM2)
start_production() {
    log "–ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ —á–µ—Ä–µ–∑ PM2..."

    if ! command -v pm2 &> /dev/null; then
        error "PM2 –Ω–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω. –£—Å—Ç–∞–Ω–æ–≤–∏—Ç–µ: npm install -g pm2"
    fi

    # –û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø—Ä–æ—Ü–µ—Å—Å—ã
    pm2 stop all 2>/dev/null || true
    pm2 delete all 2>/dev/null || true

    # –ó–∞–ø—É—Å–∫ —á–µ—Ä–µ–∑ PM2
    if [ -f "ecosystem.config.js" ]; then
        pm2 start ecosystem.config.js
        success "–°–µ—Ä–≤–∏—Å—ã –∑–∞–ø—É—â–µ–Ω—ã —á–µ—Ä–µ–∑ PM2"

        echo ""
        echo "üìä –°—Ç–∞—Ç—É—Å —Å–µ—Ä–≤–∏—Å–æ–≤:"
        pm2 status

        echo ""
        echo "üìã –õ–æ–≥–∏:"
        echo "   pm2 logs --lines 50"
        echo "   pm2 logs boss-ai-api-gateway"
        echo "   pm2 logs boss-ai-ozon-manager"
        echo ""
    else
        error "–§–∞–π–ª ecosystem.config.js –Ω–µ –Ω–∞–π–¥–µ–Ω"
    fi
}

# –ü–æ–∫–∞–∑–∞—Ç—å –ø–æ–º–æ—â—å
show_help() {
    echo "–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: $0 [–æ–ø—Ü–∏–∏]"
    echo ""
    echo "–û–ø—Ü–∏–∏:"
    echo "  dev, development  - –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ (–ø–æ —É–º–æ–ª—á–∞–Ω–∏—é)"
    echo "  prod, production   - –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ —á–µ—Ä–µ–∑ PM2"
    echo "  check             - –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã"
    echo "  build            - –¢–æ–ª—å–∫–æ –∫–æ–º–ø–∏–ª—è—Ü–∏—è"
    echo "  help, -h, --help  - –ü–æ–∫–∞–∑–∞—Ç—å —ç—Ç—É —Å–ø—Ä–∞–≤–∫—É"
    echo ""
    echo "–ü—Ä–∏–º–µ—Ä—ã:"
    echo "  $0                # –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ"
    echo "  $0 dev            # –ó–∞–ø—É—Å–∫ –≤ development —Ä–µ–∂–∏–º–µ"
    echo "  $0 prod           # –ó–∞–ø—É—Å–∫ –≤ production —Ä–µ–∂–∏–º–µ"
    echo "  $0 check          # –¢–æ–ª—å–∫–æ –ø—Ä–æ–≤–µ—Ä–∫–∞"
    echo "  $0 build          # –¢–æ–ª—å–∫–æ –∫–æ–º–ø–∏–ª—è—Ü–∏—è"
}

# –û—Å–Ω–æ–≤–Ω–∞—è –ª–æ–≥–∏–∫–∞
main() {
    case "${1:-dev}" in
        "dev"|"development")
            check_requirements
            install_dependencies
            check_config
            build_typescript
            check_ports
            start_development
            ;;
        "prod"|"production")
            check_requirements
            install_dependencies
            check_config
            build_typescript
            start_production
            ;;
        "check")
            check_requirements
            check_config
            check_ports
            success "–ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            ;;
        "build")
            check_requirements
            install_dependencies
            build_typescript
            success "–ö–æ–º–ø–∏–ª—è—Ü–∏—è –∑–∞–≤–µ—Ä—à–µ–Ω–∞"
            ;;
        "help"|"-h"|"--help")
            show_help
            ;;
        *)
            error "–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ–ø—Ü–∏—è: $1. –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '$0 help' –¥–ª—è —Å–ø—Ä–∞–≤–∫–∏"
            ;;
    esac
}

# –ó–∞–ø—É—Å–∫
main "$@"
