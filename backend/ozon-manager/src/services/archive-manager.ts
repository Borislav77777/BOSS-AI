import { ArchiveResult, StoreConfig } from '../types';
import { Logger } from '../utils/logger';
import { OzonAPIClient } from './ozon-api-client';

/**
 * –ú–µ–Ω–µ–¥–∂–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∞—Ä—Ö–∏–≤–æ–º —Ç–æ–≤–∞—Ä–æ–≤ Ozon
 * –ü–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ Python archive.py
 */
export class ArchiveManager {
  private apiClient: OzonAPIClient;
  private logger: Logger;

  constructor(
    private storeConfig: StoreConfig,
    logger?: Logger
  ) {
    this.logger = logger || new Logger();
    this.apiClient = new OzonAPIClient({
      client_id: storeConfig.client_id,
      api_key: storeConfig.api_key,
      base_url: process.env.OZON_API_BASE_URL || 'https://api-seller.ozon.ru',
      timeout: parseInt(process.env.OZON_API_TIMEOUT || '30000'),
      rate_limit: parseInt(process.env.OZON_API_RATE_LIMIT || '50')
    }, this.logger);
  }

  /**
   * –ó–∞–ø—É—Å–∫–∞–µ—Ç –ø—Ä–æ—Å—Ç—É—é —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏—é "–¥–æ —É–ø–æ—Ä–∞"
   * –ü–æ—Ä—Ç–∏—Ä–æ–≤–∞–Ω–æ –∏–∑ Python clean_autoarchive_until_limit
   */
  async runSimpleUnarchiveProcess(): Promise<ArchiveResult> {
    const batchSize = 1; // –ú–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å - –ø–æ 1 —Ç–æ–≤–∞—Ä—É
    let totalUnarchived = 0;
    let cyclesCompleted = 0;

    this.logger.logInfo('üöÄ –ó–ê–ü–£–°–ö –ü–†–û–°–¢–û–ô –†–ê–ó–ê–†–•–ò–í–ê–¶–ò–ò –î–û –£–ü–û–†–ê');
    this.logger.logInfo(`üì¶ –†–∞–∑–º–µ—Ä –ø–∞—á–∫–∏: ${batchSize} —Ç–æ–≤–∞—Ä(–æ–≤) - –º–∞–∫—Å–∏–º–∞–ª—å–Ω–∞—è –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç—å`);
    this.logger.logInfo('üîÑ –†–µ–∂–∏–º: –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª –¥–æ —É–ø–æ—Ä–∞ –≤ –ª–∏–º–∏—Ç—ã API –∏–ª–∏ –ø—É—Å—Ç–æ–π –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤');

    // –ë–µ—Å–∫–æ–Ω–µ—á–Ω—ã–π —Ü–∏–∫–ª - —Ä–∞–±–æ—Ç–∞–µ–º –¥–æ —Ä–µ–∞–ª—å–Ω—ã—Ö –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏–π API
    while (true) {
      cyclesCompleted++;

      this.logger.logInfo(`üîÑ –¶–ò–ö–õ ${cyclesCompleted}/‚àû`);
      this.logger.logInfo(`üìä –í—Å–µ–≥–æ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: ${totalUnarchived}`);

      try {
        // –®–∞–≥ 1: –ü–æ–ª—É—á–∞–µ–º –ø–∞—á–∫—É –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤
        this.logger.logInfo(`üì¶ –ü–æ–ª—É—á–∞–µ–º ${batchSize} –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤...`);

        const autoarchiveResponse = await this.apiClient.getAutoarchivedProducts(batchSize);

        if (!autoarchiveResponse.success) {
          this.logger.logError(`–û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∞: ${autoarchiveResponse.error}`);
          continue;
        }

        const items = autoarchiveResponse.data?.result?.items || [];

        if (items.length === 0) {
          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏—á–∏–Ω—É –æ—Ç—Å—É—Ç—Å—Ç–≤–∏—è —Ç–æ–≤–∞—Ä–æ–≤
          if (this.apiClient.hasRecentLimitError()) {
            this.logger.logInfo('‚ö†Ô∏è –¢–æ–≤–∞—Ä—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã, –Ω–æ –æ–±–Ω–∞—Ä—É–∂–µ–Ω—ã –Ω–µ–¥–∞–≤–Ω–∏–µ –æ—à–∏–±–∫–∏ –ª–∏–º–∏—Ç–∞');
            this.logger.logInfo('üí° –í–µ—Ä–æ—è—Ç–Ω–æ —Ç–æ–≤–∞—Ä—ã –æ—Å—Ç–∞–ª–∏—Å—å, –Ω–æ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API');
            this.logger.logInfo(`üìä –ò—Ç–æ–≥–æ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: ${totalUnarchived} —Ç–æ–≤–∞—Ä–æ–≤`);

            return {
              success: true,
              total_unarchived: totalUnarchived,
              cycles_completed: cyclesCompleted,
              stopped_reason: 'daily_limit_reached',
              message: `üõë –î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API Ozon. –¢–æ–≤–∞—Ä—ã –æ—Å—Ç–∞–ª–∏—Å—å, –Ω–æ –Ω–µ–¥–æ—Å—Ç—É–ø–Ω—ã –¥–ª—è —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏. –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ ${totalUnarchived} —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ ${cyclesCompleted} —Ü–∏–∫–ª–æ–≤. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ 03:00 –ú–°–ö.`
            };
          } else {
            // –¢–æ–ª—å–∫–æ –µ—Å–ª–∏ –Ω–µ—Ç –Ω–µ–¥–∞–≤–Ω–∏—Ö –æ—à–∏–±–æ–∫ –ª–∏–º–∏—Ç–∞, —Å—á–∏—Ç–∞–µ–º –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤ –ø—É—Å—Ç—ã–º
            this.logger.logInfo('üéâ –ê–í–¢–û–ê–†–•–ò–í –ü–û–õ–ù–û–°–¢–¨–Æ –û–ß–ò–©–ï–ù!');
            this.logger.logInfo('üí° –ë–æ–ª—å—à–µ –Ω–µ—Ç –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤');

            return {
              success: true,
              total_unarchived: totalUnarchived,
              cycles_completed: cyclesCompleted,
              stopped_reason: 'autoarchive_empty',
              message: `–ê–≤—Ç–æ–∞—Ä—Ö–∏–≤ –ø–æ–ª–Ω–æ—Å—Ç—å—é –æ—á–∏—â–µ–Ω! –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ ${totalUnarchived} —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ ${cyclesCompleted} —Ü–∏–∫–ª–æ–≤`
            };
          }
        }

        this.logger.logInfo(`‚úÖ –ü–æ–ª—É—á–µ–Ω–æ ${items.length} –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤`);

        // –®–∞–≥ 2: –ò–∑–≤–ª–µ–∫–∞–µ–º ID —Ç–æ–≤–∞—Ä–æ–≤
        const productIds: number[] = [];
        for (const item of items) {
          const productId = item.product_id || item.id;
          if (productId) {
            try {
              productIds.push(parseInt(productId));
            } catch (error) {
              continue;
            }
          }
        }

        if (productIds.length === 0) {
          this.logger.logInfo('‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –∏–∑–≤–ª–µ—á—å –≤–∞–ª–∏–¥–Ω—ã–µ ID —Ç–æ–≤–∞—Ä–æ–≤');
          continue;
        }

        this.logger.logInfo(`üéØ –ü–æ–¥–≥–æ—Ç–æ–≤–ª–µ–Ω–æ –∫ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: ${productIds.length} —Ç–æ–≤–∞—Ä–æ–≤`);
        this.logger.logInfo(`üî¢ ID —Ç–æ–≤–∞—Ä–æ–≤: ${productIds.slice(0, 5).join(', ')}${productIds.length > 5 ? '...' : ''}`);

        // –®–∞–≥ 3: –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º —Ç–æ–≤–∞—Ä—ã
        this.logger.logInfo(`üîì –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä—É–µ–º ${productIds.length} —Ç–æ–≤–∞—Ä–æ–≤...`);

        const unarchiveResponse = await this.apiClient.unarchiveProducts(productIds);

        if (unarchiveResponse.success) {
          // –£—Å–ø–µ—à–Ω–∞—è —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏—è
          const unarchivedCount = productIds.length;
          totalUnarchived += unarchivedCount;

          this.logger.logInfo(`‚úÖ –£—Å–ø–µ—à–Ω–æ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: ${unarchivedCount} —Ç–æ–≤–∞—Ä–æ–≤`);
          this.logger.logInfo(`üìà –í—Å–µ–≥–æ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: ${totalUnarchived}`);

          // –ï—Å–ª–∏ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–ª–∏ –º–µ–Ω—å—à–µ —á–µ–º –ø–æ–ª—É—á–∏–ª–∏, –≤–æ–∑–º–æ–∂–Ω–æ –¥–æ—Å—Ç–∏–≥–ª–∏ –ª–∏–º–∏—Ç–∞
          if (unarchivedCount < productIds.length) {
            this.logger.logInfo(`‚ö†Ô∏è –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ –º–µ–Ω—å—à–µ —Ç–æ–≤–∞—Ä–æ–≤ —á–µ–º –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–ª–æ—Å—å`);
            this.logger.logInfo(`üéØ –í–æ–∑–º–æ–∂–Ω–æ –¥–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API`);
          }
        } else {
          // –û—à–∏–±–∫–∞ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏
          const errorMsg = unarchiveResponse.error || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞';
          this.logger.logInfo(`‚ùå –û—à–∏–±–∫–∞ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∞—Ü–∏–∏: ${errorMsg}`);

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∏–ø –æ—à–∏–±–∫–∏ –ª–∏–º–∏—Ç–∞
          const errorLower = errorMsg.toLowerCase();
          if (this.isLimitError(errorLower)) {
            // –ó–∞–ø–∏—Å—ã–≤–∞–µ–º –æ—à–∏–±–∫—É –ª–∏–º–∏—Ç–∞ –¥–ª—è –æ—Ç—Å–ª–µ–∂–∏–≤–∞–Ω–∏—è
            this.apiClient.recordLimitError();

            this.logger.logInfo('üõë –î–û–°–¢–ò–ì–ù–£–¢ –î–ù–ï–í–ù–û–ô –õ–ò–ú–ò–¢ –†–ê–ó–ê–†–•–ò–í–ê–¶–ò–ò OZON API');
            this.logger.logInfo('üí° –≠—Ç–æ –æ—Ñ–∏—Ü–∏–∞–ª—å–Ω—ã–π –ª–∏–º–∏—Ç Ozon: –º–∞–∫—Å–∏–º—É–º 10 –∞–≤—Ç–æ–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Ç–æ–≤–∞—Ä–æ–≤ –≤ –¥–µ–Ω—å');
            this.logger.logInfo('‚è∞ –õ–∏–º–∏—Ç —Å–±—Ä–∞—Å—ã–≤–∞–µ—Ç—Å—è –≤ 03:00 –ú–°–ö –∫–∞–∂–¥—ã–π –¥–µ–Ω—å');
            this.logger.logInfo(`üìä –ò—Ç–æ–≥–æ —Ä–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ: ${totalUnarchived} —Ç–æ–≤–∞—Ä–æ–≤`);

            return {
              success: true, // –≠—Ç–æ —É—Å–ø–µ—Ö - –º—ã –¥–æ—Å—Ç–∏–≥–ª–∏ –º–∞–∫—Å–∏–º—É–º–∞ API
              total_unarchived: totalUnarchived,
              cycles_completed: cyclesCompleted,
              stopped_reason: 'daily_limit_reached',
              message: `üõë –î–æ—Å—Ç–∏–≥–Ω—É—Ç –¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç API Ozon. –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ ${totalUnarchived} —Ç–æ–≤–∞—Ä–æ–≤ –∑–∞ ${cyclesCompleted} —Ü–∏–∫–ª–æ–≤. –ó–∞–ø—É—Å—Ç–∏—Ç–µ —Å–Ω–æ–≤–∞ –∑–∞–≤—Ç—Ä–∞ –ø–æ—Å–ª–µ 03:00 –ú–°–ö.`
            };
          }

          // –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥—Ä—É–≥–∏–µ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏–µ –æ—à–∏–±–∫–∏
          if (this.isAccessDeniedError(errorLower)) {
            this.logger.logError('üö´ –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω –∫ API');
            this.logger.logError('üí° –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏ –∏ –ø—Ä–∞–≤–∞ –¥–æ—Å—Ç—É–ø–∞');

            return {
              success: false,
              total_unarchived: totalUnarchived,
              cycles_completed: cyclesCompleted,
              stopped_reason: 'access_denied',
              message: `‚ùå –î–æ—Å—Ç—É–ø –∫ API –∑–∞–ø—Ä–µ—â—ë–Ω. –†–∞–∑–∞—Ä—Ö–∏–≤–∏—Ä–æ–≤–∞–Ω–æ ${totalUnarchived} —Ç–æ–≤–∞—Ä–æ–≤. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ API –∫–ª—é—á–∏.`
            };
          }

          // –î—Ä—É–≥–∏–µ –æ—à–∏–±–∫–∏ - –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏
          this.logger.logInfo('‚ö†Ô∏è –ü—Ä–æ–¥–æ–ª–∂–∞–µ–º –ø–æ–ø—ã—Ç–∫–∏ —Å –Ω–æ–≤–æ–π –ø–∞—á–∫–æ–π —Ç–æ–≤–∞—Ä–æ–≤');
        }

        // –ù–µ–±–æ–ª—å—à–∞—è –∑–∞–¥–µ—Ä–∂–∫–∞ –º–µ–∂–¥—É —Ü–∏–∫–ª–∞–º–∏
        await this.sleep(500);

      } catch (error: any) {
        this.logger.logError(`–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞ –≤ —Ü–∏–∫–ª–µ ${cyclesCompleted}: ${error.message}`, error);
        // –ü—Ä–∏ –∫—Ä–∏—Ç–∏—á–µ—Å–∫–æ–π –æ—à–∏–±–∫–µ –ø—Ä–æ–¥–æ–ª–∂–∞–µ–º
        await this.sleep(1000);
        continue;
      }
    }
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π –ª–∏–º–∏—Ç–∞
   */
  private isLimitError(errorMsg: string): boolean {
    const limitKeywords = [
      'quota', '–ª–∏–º–∏—Ç', 'limit exceeded', 'restore limit', 'restore quota',
      'daily limit', '–¥–Ω–µ–≤–Ω–æ–π –ª–∏–º–∏—Ç', '–ø—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç', 'quota exceeded',
      '–≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏–µ –ø—Ä–µ–≤—ã—à–µ–Ω–æ', '–ª–∏–º–∏—Ç –≤–æ—Å—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∏—è'
    ];

    return limitKeywords.some(keyword => errorMsg.includes(keyword));
  }

  /**
   * –ü—Ä–æ–≤–µ—Ä—è–µ—Ç —è–≤–ª—è–µ—Ç—Å—è –ª–∏ –æ—à–∏–±–∫–∞ –æ—à–∏–±–∫–æ–π –¥–æ—Å—Ç—É–ø–∞
   */
  private isAccessDeniedError(errorMsg: string): boolean {
    const accessDeniedKeywords = [
      '403', '–¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â—ë–Ω', 'access denied', 'forbidden'
    ];

    return accessDeniedKeywords.some(keyword => errorMsg.includes(keyword));
  }

  /**
   * –ó–∞–¥–µ—Ä–∂–∫–∞ –≤ –º–∏–ª–ª–∏—Å–µ–∫—É–Ω–¥–∞—Ö
   */
  private sleep(ms: number): Promise<void> {
    return new Promise(resolve => setTimeout(resolve, ms));
  }
}
